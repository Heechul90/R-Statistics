price_n <- Cars93 %>%
select(Price, Origin) %>%
group_by(Origin) %>%
summarise(price_n = n())
# 필요 패키지
library(MASS)
library(dplyr)
price_n <- Cars93 %>%
select(Price, Origin) %>%
group_by(Origin) %>%
summarise(price_n = n())
# MASS와 dplyr 같이 사용하면 충돌이 일어남(dplyr에 select이용 지정)
# 아니면 MASS먼저 로딩하고 그 다음 dplyr 로딩하면 됨
select <- dplyr::select
price_n <- Cars93 %>%
select(Price, Origin) %>%
group_by(Origin) %>%
summarise(price_n = n())
prince_n
price_n
price_mean <- Cars93 %>%
select(Price, Origin) %>%
group_by(Origin) %>%
summarise(price_mean = mean(Price))
price_mean
price_sd <- Cars93 %>%
select(Price, Origin) %>%
group_by(Origin) %>%
summarise(price_sd = sd(Price))
price_sd
# 1. 분산의 동일성 검정
# 영가설 : USA 집단과 non-USA 집단의 분산은 서로 동일하다.
# 대안가설 : USA 집단과 non-USA 집단의 분산은 서로 다르다.
var.test(Cars93$Origin ~ Cars93$Price)
# 1. 분산의 동일성 검정
# 영가설 : USA 집단과 non-USA 집단의 분산은 서로 동일하다.
# 대안가설 : USA 집단과 non-USA 집단의 분산은 서로 다르다.
srt(Cars93)
# 1. 분산의 동일성 검정
# 영가설 : USA 집단과 non-USA 집단의 분산은 서로 동일하다.
# 대안가설 : USA 집단과 non-USA 집단의 분산은 서로 다르다.
str(Cars93)
var.test(Cars93$Origin ~ Cars93$Price)
head(mtcars)
str(mtcars)
mpg_mean <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_mean = mean(mpg))
mpg_mean
mpg_sd <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_sd = sd(mpg))
mpg_sd
mpg_n <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_n = n())
mpg_n
# 1. 분산의 동일성 검정
# 영가설 : 오토/수동 집단의 분산은 서로 동일하다.
# 대안가설 : 오토/수동 집단의 분산은 서로 다르다.
var.test(mtcars$mpg ~ mtcars$am)
# 1. 분산의 동일성 검정
# 영가설 : 오토/수동 집단의 분산은 서로 동일하다.
# 대안가설 : 오토/수동 집단의 분산은 서로 다르다.
str(mtcars)
var.test(mtcars$am ~ mtcars$mpg)
# 1. 분산의 동일성 검정
# 영가설 : 오토/수동 집단의 분산은 서로 동일하다.
# 대안가설 : 오토/수동 집단의 분산은 서로 다르다.
str(mtcars)
var.test(mtcars$am ~ mtcars$mpg)
var.test(mtcars$mpg ~ mtcars$am)
var.test(Cars93$Price ~ Cars93$Origin)
var.test(Cars93$Price ~ Cars93$Origin)
## 문제 03. mpg 데이터셋에서 다음을 검정해 보시오.
## 문제 03-1. subcompact 자동차와 midsize 자동차의 고속도로 연비
mpg
str(mpg)
mpg3 <- mpg %>%
filter(class %in% c('subcomapact', 'midsize'))
mpg3
tail(mpg3)
mpg3 <- mpg %>%
filter(class %in% c('subcompact', 'midsize'))
mpg3
tail(mpg3)
str(mpg3)
mpg3 <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
View(mpg3)
mpg3 <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
mpg3_n<- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_n = n())
mpg3
mpg3
## 문제 03. mpg 데이터셋에서 다음을 검정해 보시오.
## 문제 03-1. subcompact 자동차와 midsize 자동차의 고속도로 연비
mpg
mpg3 <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
mpg3_n<- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_n = n())
library(dplyr)
# MASS와 dplyr 같이 사용하면 충돌이 일어남(dplyr에 select이용 지정)
# 아니면 MASS먼저 로딩하고 그 다음 dplyr 로딩하면 됨
select <- dplyr::select
## 문제 03. mpg 데이터셋에서 다음을 검정해 보시오.
## 문제 03-1. subcompact 자동차와 midsize 자동차의 고속도로 연비
mpg
str(mpg)
mpg3 <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
mpg3_n<- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_n = n())
mpg3 <- mpg %>%
filter(class %in% c('subcompact', 'midsize'))
mpg3
str(mpg3)
mpg3_n<- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_n = n())
mpg3
mpg3_n
mpg3_mean <- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_mean = mean(hwy))
mpg3_mean
mpg3_sd <- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_sd = sd(hwy))
mpg3_sd
# 1. 분산의 동일성 검정
# 영가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 동일하다. (V1 / V2 = 1)
# 대안가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 다르다. (V1 / V2 != 0)
var.test(mpg3$hwy ~ mpg3$class)
mpg3
View(mpg3)
# 1. 분산의 동일성 검정
# 영가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 동일하다. (V1 / V2 = 1)
# 대안가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 다르다. (V1 / V2 != 0)
var.test(mpg3$hwy ~ mpg3$class)
## 2. 평균의 동일성 검정
# 영가설 : subcompact 자동차의 hwy 평균이 midsize 자동차의 hwy 평균보다 높다.(mu1 - mu2 >= 0)
# 대안가설 : subcompact 자동차의 hwy 평균과 midsize 자동차의 hwy 평균은 다르다.(mu1 - mu2 < 0)
t.test(mpg3$hwy ~ mpg3$class, mu=0, alternative='less', var.equal=T)
mpg3_mean
mpg3_sd
mpg3_n
## 문제 03-2. 일반 휘발유(r)와 고급 휘발유(p)의 도시 연비
mpg
View(mpg)
mpg3.2 <- mpg %>%
filter(fl %in% c('r', 'p'))
mpg3.2
View(mpg3.2)
mpg3.2_n <- mpg3.2 %>%
select(fl, cty) %>%
group_by((fl)) %>%
summarise(mpg3.2_n = n())
mpg3.2_n
mpg3.2_mean <- mpg3.2 %>%
select(fl, cty) %>%
group_by((fl)) %>%
summarise(mpg3.2_mean = mean(cty))
mpg3.2_mean
mpg3.2_sd <- mpg3.2 %>%
select(fl, cty) %>%
group_by((fl)) %>%
summarise(mpg3.2_sd = sd(cty))
mpg3.2_sd
# 1. 분산의 동일성 검정
# 영가설 : 일반휘발유의 도시연비와 고급 휘발유의 도시연비 분산은 같다(v1 / v2 = 1)
# 대안가설 : 일반휘발유의 도시연비와 고급 휘발유의 도시연비 분산은 다르다(v1 / v2 != 1)
var.test(mpg3.2$cty ~ mpg3.2$fl)
## 문제 03-3. subcompact 자동차의 전륜구동(f)이냐 후륜구동(r)이냐에 따른 도시 연비
mpg
View(mpg)
mpg3.3 <- mpg %>%
filter(class == 'subcompact') %>%
filter(drv %in% c('f', 'f'))
mpg3.3
mpg3.3_n <- mpg3.3 %>%
select(drv, cty) %>%
group_by(drv) %>%
summarise(mpg3.3_n = n())
mpg3.3_n
mpg3.3 <- mpg %>%
filter(class == 'subcompact') %>%
filter(drv %in% c('f', 'r'))
mpg3.3
mpg3.3_n <- mpg3.3 %>%
select(drv, cty) %>%
group_by(drv) %>%
summarise(mpg3.3_n = n())
mpg3.3_n
mpg3.3_mean <- mpg3.3 %>%
select(drv, cty) %>%
group_by(drv) %>%
summarise(mpg3.3_mean = mean(cty))
mpg3.3_mean
mpg3.3_sd <- mpg3.3 %>%
select(drv, cty) %>%
group_by(drv) %>%
summarise(mpg3.3_sd = sd(cty))
mpg3.3_sd
# 1. 분산 동일성 검정
# 영가설 : 전륜구동의 도시연비 분산과 후륜구동의 도시연비 분산이 같다 (v1 / v2 = 1)
# 대안가설 : 전륜구동의 도시연비 분산과 후륜구동의  도시연비 분산이 다르다(v1 / v2 != 1)
var.test(mpg3.3$cty ~ mpg3.3$drv)
# 1. 분산의 동일성 검정
# 영가설 : 일반휘발유의 도시연비와 고급 휘발유의 도시연비 분산은 같다(v1 / v2 = 1)
# 대안가설 : 일반휘발유의 도시연비와 고급 휘발유의 도시연비 분산은 다르다(v1 / v2 != 1)
var.test(mpg3.2$cty ~ mpg3.2$fl)
# 1. 분산 동일성 검정
# 영가설 : 전륜구동의 도시연비 분산과 후륜구동의 도시연비 분산이 같다 (v1 / v2 = 1)
# 대안가설 : 전륜구동의 도시연비 분산과 후륜구동의  도시연비 분산이 다르다(v1 / v2 != 1)
var.test(mpg3.3$cty ~ mpg3.3$drv)
# 1. 분산 동일성 검정
# 영가설 : 전륜구동의 도시연비 분산과 후륜구동의 도시연비 분산이 같다 (v1 / v2 = 1)
# 대안가설 : 전륜구동의 도시연비 분산과 후륜구동의  도시연비 분산이 다르다(v1 / v2 != 1)
var.test(mpg3.3$cty ~ mpg3.3$drv)
var.test(Cars93$Price ~ Cars93$Origin)
## 1. 분산의 동일성 검정
# 영가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 동일하다. (V1 / V2 = 1)
# 대안가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 다르다. (V1 / V2 != 0)
var.test(mpg3$hwy ~ mpg3$class)
str(mpg)
### 연습문제07. Paired sample T 테스트
ex07 <- data.frame('A' =
c(13.2, 8.2, 10.9, 14.3, 10.7, 6.6, 9.5, 10.8, 8.8, 13.3),
'B' =
c(14.0, 8.8, 11.2, 14.2, 11.8, 6.4, 9.8, 11.3, 9.3, 13.6))
ex07
# 직접 검정 통계량 구해보기
n <- length(ex07$A - ex07&B)
ex07
# 직접 검정 통계량 구해보기
n <- length(ex07$A - ex07$B)
n
m <- mean(ex07$A - ex07$B)
m
s <- sd(ex07$A - ex07$B)
t <- m / (sd/sqrt(n))
s
t <- m / (s/sqrt(n))
t
### 연습문제07. Paired sample T 테스트
## 문제 2.
ex7.2 <- data.frame('A' =
c(13.2, 8.2, 10.9, 14.3, 10.7, 6.6, 9.5, 10.8, 8.8, 13.3),
'B' =
c(14.0, 8.8, 11.2, 14.2, 11.8, 6.4, 9.8, 11.3, 9.3, 13.6))
ex7.2
# 영가설 :
# 직접 검정 통계량 구해보기
n <- length(ex7.2$A - ex7.2$B)
n
m <- mean(ex7.2$A - ex7.2$B)
m
s <- sd(ex7.2$A - ex7.2$B)
s
t <- m / (s/sqrt(n))
t
# R로 구하기
t.test(ex7.2$A, ex7.2$B, paired = T, alternative = )
s
## 문제 01
ex7.1 <- data.frame('placebo' =
c(51.4, 52.0, 45.5, 54.5, 52.3, 50.9, 52.7, 50.3, 53.8, 53.1),
'newmedicine' =
c(50.1, 51.5, 45.9, 53.1, 51.8, 50.3, 52.0, 49.9, 52.5, 53.0))
ex7.1
# 영가설 : 새로운 당뇨병 치료제는 효과가 없다. (mu1-mu2 > 0, mu1-mu2 = 0)
# 대안가설 : 새로운 당뇨병 치료제는 효과가 있다. (mu1-mu2 < 0)
# 직접 구해보기
n <- length(ex7.1$placebo - ex7.1$newmedicine)
n
m <- mean(ex7.1$placebo - ex7.1$newmedicine)
m
s <- sd(ex7.1$placebo - ex7.1$newmedicine)
s
t <- m / (s/sqrt(n))
t
# R로 구해보기
t.test(ex7.1$placebo, ex7.1$newmedicine, paired = T, alternative = 'less')
ad
## 예제
ad <- read.csv('data/age.data.csv', header = T)
ad
str(ad)
### 연습문제10. 일원 분산분석(One way ANOVA)
## 문제 01.
ex10.1 <- data.frame('호수1' =
c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10),
'호수2' =
c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10),
'호수3' =
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30))
ex10.1
# 영가설 : 변화가 없다 (mu1 = mu2 =mu3)
# 대안가설 : 적어도 1개 호수의 산소량 차이는 있다.
ow <- lm(호수3~호수1, data = ex10.1)
anova(ow)
lake_mean <- ex01.1 %>%
summarise_each(funs(mean), 호수1, 호수2, 호수3)
lake_mean <- ex10.1 %>%
summarise_each(funs(mean), 호수1, 호수2, 호수3)
lake_mean
lake_sd <- ex10.1 %>%
summarise_each(funs(sd), 호수1, 호수2, 호수3)
lake_sd
anova(ow)
## 문제 02.
ex10.2 <- data.frame('A' =
c(15.5, 14.3, 16.3, 13.5, 15.7, 16.4, 14.7),
'B' =
c(14.7, 16.3, 15.5, 15.2, 16.3, 13.5, 15.4),
'C' =
c(15.5, 13.2, 16.5, 15.7, 15.3, 15.2, 14.8))
ex10.2
# 영가설 : 3개 채소에 대한 도매시장 7곳의 가격 차이는 없다 (mu1 = mu2 = mu3)
# 대안가설 : 3개 채소에 대한 도매시장 7곳의 가격 차이는 있다.
vege_mean <- ex10.2 %>%
summarise_each(funs(mean), A, B, C)
vege_mean
vege_sd <- ex10.2 %>%
summarise_each(funs(sd), A, B, C)
vege_sd
# 영가설 : 3개 채소에 대한 도매시장 7곳의 가격 차이는 없다 (mu1 = mu2 = mu3)
# 대안가설 : 3개 채소에 대한 도매시장 7곳의 가격 차이는 있다.
ow <- lm(A ~ C, data = ex10.2)
anova(ow)
x <- seq(0, 15, by=0.01)
dc <- dchisq(x, df=3)
alpha <- 0.05
tol <- qchisq(0.95, df=3)
par(mar=c(0,1,1,1))
plot(x, dc, type="l", axes=F, ylim=c(-0.03, 0.25), xlab="", ylab="")
abline(h=0)
tol.g <- round(tol, 2)
polygon(c(tol.g, x[x>tol.g], 15), c(0, dc[x>tol.g], 0), col="red")
text(0, -0.03, "0", cex=0.8)
text(tol, -0.03, expression(chi[0.05]^{2}==2.14), cex=0.8)
# 예제-1. 멘델의 법칙
x <- c(315, 101, 108, 32)
chisq.test(x, p=c(9, 3, 3, 1)/16)
# 그래프에 표시
x <- seq(0, 15, by=0.01)
dc <- dchisq(x, df=3)
par(mar=c(0,1,1,1))
plot(x, dc, type="l", axes=F, ylim=c(-0.03, 0.25), xlab="", ylab="")
abline(h=0)
tol.g <- round(tol, 2)
polygon(c(tol.g, x[x>tol.g], 15), c(0, dc[x>tol.g], 0), col="red")
text(0, -0.01, "0", cex=0.8)
text(tol, -0.03, expression(chi[0.05]^{2}==2.14), cex=0.8)
tol2 <- qchisq(1-0.9254, df=3)
tol2.g <- round(tol2, 2)
polygon(c(tol2.g, x[x>tol2.g], 15), c(0, dc[x>tol2.g], 0), col="blue", density=20, angle=305)
text(tol2, -0.03, expression(chi[0.9254]^{2}==0.47), cex=0.8)
arrows(7, 0.17, 4, 0.12, length=0.05)
text(7, 0.177, expression(plain(P)(F>0.47) == 0.9254), cex=0.8)
setwd('D:/Heechul/R_Statistics/Lecture/chapter08(범주형 자료분석)')
### 연습문제11. 적합도 / 독립성 검정
## 문제 01.
x <- 80
chisq.test(x, p=16/80)
### 연습문제11. 적합도 / 독립성 검정
## 문제 01. 어느 공정의 부적합품률 15%
##          시료 80개를 추출
##          검사한 결과 불량이 16개
##          유의수준 5%로 적합도 검정을 하시오.
p <- 0.15
n <- 80
phat <- 16 / 80
setwd('D:/Heechul/R_Statistics/Lecture/chapter08(범주형 자료분석)')
## 예제02. 연령대별 SNS 이용률의 동질성 검정
sns.c <- read.csv("data/snsbyage.csv",
header=T, stringsAsFactors=FALSE)
str(sns.c)
sns.c <- transform(sns.c, age.c =
factor(age, levels=c(1, 2, 3),
labels=c("20대", "30대", "40대")))
sns.c <- transform(sns.c, service.c =
factor(service, levels=c("F", "T", "K", "C", "E"),
ordered=TRUE))
c.tab <- table(sns.c$age.c, sns.c$service.c)
str(sns.c)
c.tab
a.n <- margin.table(c.tab, margin=1)
s.n <- margin.table(c.tab, margin=2)
s.p <- s.n / margin.table(c.tab)
expected <- a.n %*% t(s.p)
o.e <- c.tab-expected
t.t <- sum((o.e)^2 / expected)    # 검정 통계량
qchisq(0.95, df=8)
1-pchisq(t.t, df=8)               # p-value
chisq.test(c.tab)
# chisq.test에 숨겨진 값들
result <- chisq.test(c.tab)
names(result)
result$expected
str(result)
result$p.value
addmargins(result$expected)
# 예제-3. 성별에 따른 대학원 입학 여부의 독립성 검정
data(UCBAdmissions)
UCBAdmissions
ucba.tab <- apply(UCBAdmissions, c(1, 2), sum)
ucba.tab
round(prop.table(ucba.tab, margin=2) * 100, 1)
# 독립성 검정
a.n <- margin.table(ucba.tab, margin=1)
a.n
g.n
g.n <- margin.table(ucba.tab, margin=2)
g.n
a.p <- a.n / margin.table(ucba.tab)
a.p
g.p
g.p <- g.n / margin.table(ucba.tab)
g.p
expected <- margin.table(ucba.tab) * (a.p %*% t(g.p))
expected
## chi-square statistic
o.e <- (ucba.tab - expected)^2 / expected
addmargins(o.e)
chisq.t <- sum(o.e)           # 검정 통계량
chisq.t
qchisq(0.95, df=1)
1-pchisq(chisq.t, df=1)       # p-value
ucba.tab
chisq.test(ucba.tab, correct=FALSE)
## 문제 01.
ex11.2 <- data.frame('1갑이상' =
c(23, 31, 13),
'1갑이하' =
c(21, 48, 23),
'안피움' =
c(63, 159, 119))
ex11.2
ex11.2 <- colnames('반병이상', '반병이하', '못마심')
ex11.2 <- colname('반병이상', '반병이하', '못마심')
ex11.2 <- colnames('반병이상', '반병이하', '못마심')
colnames(ex11.2) <- c('반병이상', '반병이하', '못마심')
ex11.2
colnames(ex11.2) <- c('1갑이상', '1갑이하', '안피움움')
ex11.2
rownames(ex11.2) <- c('반병이상', '반병이하', '못마심')
ex11.2
ex11.2 <- apply(ex11.2, 1, sum)
ex11.2
## 문제 01.
ex11.2 <- data.frame('1갑이상' =
c(23, 31, 13),
'1갑이하' =
c(21, 48, 23),
'안피움' =
c(63, 159, 119))
colnames(ex11.2) <- c('1갑이상', '1갑이하', '안피움움')
rownames(ex11.2) <- c('반병이상', '반병이하', '못마심')
ex11.2
ex11.2 <- ex11.2 %>%
mutate(계 = 1갑이상, 1갑이하)
ex11.2 <- ex11.2 %>%
mutate(계 = '1갑이상', '1갑이하')
ex11.2
ex11.2 <- ex11.2 %>%
mutate(계 = 1갑이상 + 1갑이하)
ex11.2 <- ex11.2 %>%
mutate(계 = 1갑이상 + 1갑이하)
ex11.2 <- ex11.2 %>%
mutate(계 = '1갑이상' + '1갑이하')
ex11.2 <- ex11.2 %>%
mutate(계 = 1갑이상 + 1갑이하)
ex11.2
## 문제 01.
ex11.2 <- data.frame('1갑이상' =
c(23, 31, 13),
'1갑이하' =
c(21, 48, 23),
'안피움' =
c(63, 159, 119))
colnames(ex11.2) <- c('1갑이상', '1갑이하', '안피움움')
rownames(ex11.2) <- c('반병이상', '반병이하', '못마심')
ex11.2 <- apply(ex11.2, 1, sum)
ex11.2 <- ex11.2 %>%
mutate(계 = 1갑이상 + 1갑이하)
ex11.2
## 문제 01.
ex11.2 <- data.frame('1갑이상' =
c(23, 31, 13),
'1갑이하' =
c(21, 48, 23),
'안피움' =
c(63, 159, 119))
colnames(ex11.2) <- c('1갑이상', '1갑이하', '안피움움')
rownames(ex11.2) <- c('반병이상', '반병이하', '못마심')
ex11.2
