Sys.time()
date
date()
Class(Sys.Date())
class(Sys.Date())
classs("2019-05-30")     # 문자열로 쓰면 연산이 불가능하다. 그래서 연산을 하기 위해서 문자열을 쓰지 않는다.
as.Date("2019-05-30")
as.Date("2019-05-30)
setwd("D:/Workspace/R_Data_Anailysis/part3/data'')
txt1 <- read.csv("factor_test.csv")
txt1 <- read.csv("factor_test.csv")
txt1
factor1 <- factor(txt1$blood)
factor1
summary(factor1)
gender1 <- factor(txt1$sex)
gender1
view(txt1)
View(txt1)
Sys.Date()
sys.date()
Sys.date()
Sys.Date()     # 2019-05-30 기본표현. 바꾸고 싶으면 뭔가를 해야한다.
Sys.time()
Sys.Time()
Sys.time()
date
date()
Class(Sys.Date())
class(Sys.Date())
classs("2019-05-30")     # 문자열로 쓰면 연산이 불가능하다. 그래서 연산을 하기 위해서 문자열을 쓰지 않는다.
as.Date("2019-05-30")
as.Date("2019-05-30)
as.Date("2019-05-30")
as.Date("2019-05-30")
as.Date("2019-05-30")
as.Date("01-11-2013", format="%d-%m-%V")
as.Date("01-11-2013", format="%d-%m-%Y")     # Y 대문자면 년도를 4자리, 소문자면 년도가 2자리.
setwd("D:/Workspace/R_Data_Anailysis/part3/data'')
txt1 <- read.csv("factor_test.csv")
txt1 <- read.csv("factor_test.csv")
txt1
factor1 <- factor(txt1$blood)
factor1
summary(factor1)
gender1 <- factor(txt1$sex)
gender1
view(txt1)
View(txt1)
Sys.Date()
sys.date()
Sys.date()
Sys.Date()     # 2019-05-30 기본표현. 바꾸고 싶으면 뭔가를 해야한다.
Sys.time()
Sys.Time()
Sys.time()
date
date()
Class(Sys.Date())
class(Sys.Date())
classs("2019-05-30")"     # 문자열로 쓰면 연산이 불가능하다. 그래서 연산을 하기 위해서 문자열을 쓰지 않는다.
as.Date("2019-05-30")
as.Date("2019-05-30")
as.Date("2019-05-30")
as.Date("01-11-2013", format="%d-%m-%Y")     # Y 대문자면 년도를 4자리, 소문자면 년도가 2자리.
as.Date("01-11-2013"), format= "%y-%m-%d")
setwd("D:/Workspace/R_Data_Anailysis/part3/data'')
txt1 <- read.csv("factor_test.csv")
txt1 <- read.csv("factor_test.csv")
txt1
factor1 <- factor(txt1$blood)
factor1
summary(factor1)
gender1 <- factor(txt1$sex)
gender1
view(txt1)
View(txt1)
Sys.Date()
sys.date()
Sys.date()
Sys.Date()     # 2019-05-30 기본표현. 바꾸고 싶으면 뭔가를 해야한다.
Sys.time()
Sys.Time()
Sys.time()
date
date()
Class(Sys.Date())
class(Sys.Date())
classs("2019-05-30")"     # 문자열로 쓰면 연산이 불가능하다. 그래서 연산을 하기 위해서 문자열을 쓰지 않는다.
as.Date("2019-05-30")
as.Date("2019-05-30")
as.Date("2019-05-30")
as.Date("01-11-2013", format="%d-%m-%Y")     # Y 대문자면 년도를 4자리, 소문자면 년도가 2자리.
as.Date("01-11-2013"), format= "%y-%m-%d")
as.Date("01-11-2013", format="%d-%m-%Y")     # Y 대문자면 년도를 4자리, 소문자면 년도가 2자리.
setwd("D:/Workspace/R_Data_Anailysis/part3/data'')
txt1 <- read.csv("factor_test.csv")
txt1 <- read.csv("factor_test.csv")
txt1
factor1 <- factor(txt1$blood)
factor1
summary(factor1)
gender1 <- factor(txt1$sex)
gender1
view(txt1)
View(txt1)
Sys.Date()
sys.date()
Sys.date()
Sys.Date()     # 2019-05-30 기본표현. 바꾸고 싶으면 뭔가를 해야한다.
Sys.time()
Sys.Time()
Sys.time()
date
date()
Class(Sys.Date())
class(Sys.Date())
classs("2019-05-30")"     # 문자열로 쓰면 연산이 불가능하다. 그래서 연산을 하기 위해서 문자열을 쓰지 않는다.
as.Date("2019-05-30")
as.Date("2019-05-30")
as.Date("2019-05-30")
as.Date("01-11-2013", format="%d-%m-%Y")     # Y 대문자면 년도를 4자리, 소문자면 년도가 2자리.
as.Date("01-11-2013"), format= "%y-%m-%d")
as.Date("01-11-2013", format= "%y-%m-%d")
as.Date("1990년10월9일", format= "%y년 %m월 %d일")
as.Date("2013년10월9일", format= "%y년 %m월 %d일")
as.Date("2013년10월9일", format= "%Y년 %m월 %d일")
as.Date("05-30", format= "%m-%d")
as.Date(10, origin= "2019-05-30")
as.Date(20, origin=date())
as.Date(-10, origin= "1990-10-09")
"2019-05-30" - "2019-05-27"
as.Date("2019-05-30") - as.Date("2019-05-27")
as.Date("2019-05-30") + 20
as.Date("2019-11-14") - date()
as.Date("2019-11-14") - as.Date("2019-05-30")
as.Date("2019-11-14") - Sys.Date("2019-05-30")
as.Date("2019-11-14") - as.Date()
as.Date("2019-11-14") - Sys.Date()
as.Date("2014-11-11 20:00:00") - as.Date("2014-11-11 18:30")
as.POSIXct("2014-11-11 20:00:00") - as.POSIXct("2014-11-11 18:30")
install.packages("lubridate")
library(lubridate)
now()
now()
date <- now()
year(date)
month(date)
month(date, label= T)
day(date)
wday(date)
wday(date, label = T)
dat <- date - days(2); date
month(date) <- 2; date
date <- date - days(2); date
date <- date - days(2); date
date+years(1)
date <- date - days(2); date
date+months(-3)
date+months(3)
date <- hm("22:30") ; date
date <- hms("22:30:05") ; date
var1 <- "aaa" ; var1
var2 <- 111; var2
var3 <- Sys.Date(); var3
var4 <- c("a", "b", "c"); var4
222 -> var5 -> var6
var5; var6;
var8 <- var9 <- 222
string1 <- "Very Easy R Programming"; string1
string2 <- "I'm James Seo"; string2
string3 <- 'He said, "I am single".'; string3
string4 <- "He said, \"I am single\"."; string4
comp <- c(1,"2")
comp
class(comp)
num1 <- 1
num2 <- 2
num1 + num2
char1 <- "a"
num1 + char1
seq1 <- 1:5
seq1
seq2 <- 'a':'f'
date1 <- seq(from=as. Date('2014-01-01'), to=as.Date('2014-01-31'), by=1)
date1 <- seq(from=as.Date('2014-01-01'), to=as.Date('2014-01-31'), by=1)
date1
date2 <- seq(from=as.Date('2014-01-01'), to=as.Date('2014-05-31'), by='month')
date2
date3 <- seq(from=as.Date('2014-01-01'), to=as.Date('2020-05-31'), by='year')
date3
objects()
.hidden <- 3
.hidden
rm(string2)
ls()
rm(list = ls())
c(1,2,3,4,5)
c(1,2,3,4,"5")
vec1 <- c(1,2,3,4,5)
vec1
vec1[3]
vec1[-3]
vec1[1:]
vec1[1:3]
length((vec1))
vec1[1:(length(vec1-2))]
vec1[1:(length(vec1)-2)]
vec1[length(vec1)]
vec1[-1:-3]
vec1[2:4]
vec1[2] <- 6; vec1
vec1
vec1 <- c(vec1,7); vec1
vec1[7] <- 8; vec1
vec1[9] <- 9; vec1
append(vec1,10,after=3)
append(vec1,(10,11),after=6)
append(vec1,c(10,11),after=6)
vec <- append(vec1,c(10,11),after=6)
rm(vec)
vec1 <- append(vec1,c(10,11),after=6); vec1
append(vec1, 100, after=0)     # 제일 앞에 100 나와라
c(1,2,4) + c(4,5,6)
c(1,2,3) + c(4,5,6)
c(1,2,3) + 1
var1 <- c(1,2,3)
var2 <- c(4,5,6)
var1+var2
var3 <- c('3', '4', '5'); var3
var1 + var3
union(var1, var3)
var4 <- c(1,2,3,4,5)
var1; var4
var1 + var4
var5 <- c(1,2,3,4,5,6)
var1 + var5
var1 - var2
var2 <- c(3,4,5)
var1 - var2
setdiff(var1-var2)
setdiff(var1, var2)
setdiff(var2, var1)
intersect((var1, var2))
intersect(var1, var2)
fruits <- c(10,20,30); fruits
names(fruits) <- c('apple', 'banana', 'mango')
fruits
var5 <- seq(1:6); var5
var6 <- seq(2:-2); var6
var6
var6 <- seq(2,-2); var6
even <- c(2,4,6,8,10)
even
even <- seq(2,10,2); even
even <- seq(1,10,2); even
odd <- seq(1,10,2); even
even <- seq(2,10,2); even    # 안쓰면 1,-1 로 인식. 이것은 2씩 증가
var8 <- rep(1:3, 2); var8
var9 <- rep(1:3, each=2); var9
5 %in% even
4 %in% even
# 백터형 연습문제 1번
date4 <- seq((2015-01-01 : 2015-01-31); date4
# 백터형 연습문제 1번
date4 <- seq(from=as.Date(2015-01-01), to=as.Date(2015-01-31)); date4
# 백터형 연습문제 1번
date4 <- seq(from=as.Date('2015-01-01'), to=as.Date('2015-01-31')); date4
# 백터형 연습문제 1번
date4 <- seq(from=as.Date('2015-01-01'), to=as.Date('2015-01-31'), by=day()); date4
# 백터형 연습문제 1번
date4 <- seq(from=as.Date('2015-01-01'), to=as.Date('2015-01-31'), by='day'); date4
# 백터형 연습문제 2번
vec <- c('사과', '배', 감, 버섯, 고구마)
# 백터형 연습문제 2번
vec1 <- c('사과', '배', '감', '버섯', '고구마'); vec1
vec[-3]
vec1[-3]
# 백터형 연습문제 2번
vec1 <- c('봄', '여름', '가을', '겨울'); vec1
vec2 <- c('봄', '여름', '늦여름', '초가을'); vec2
vec1+vec2
union(vec1,vec2)
setdiff(vec1,vec2)
intersect(vec1,vec2)
rm(list=ls())
mat1 <- matrix(c(1,2,3,4))
mat1
mat2 <- matrix(c(1,2,3,4), nrow=2); mat2
mat3 <- matrix(c(1,2,3,4), nrow=2, byrow=T); mat3
mat4 <-matrix(c(1,2,3,4), nrow=4); mat4
mat4 <-matrix(c(1,2,3,4), nrow=3); mat4
rm(mat4)
mat3[1,1]
mat3[1,]
mat3[,1]
mat4 <- matrix(seq(1:9), nrow=3, byrow=T); mat4
mat4 <- matrix(seq(1:9), nrow=3,); mat4
mat4 <- matrix(seq(1:9), nrow=3, byrow=T); mat4
# 새로운 행과 열을 추가
mat4 <- rbind(mat4,seq(10:12)); mat4
# 새로운 행과 열을 추가
mat4 <- rbind(mat4,c(10,11,12)); mat4
mat4 <- matrix(seq(1:9), nrow=3, byrow=T); mat4
mat4 <- rbind(mat4,c(10,11,12)); mat4
mat4 <- cbind(mat4,c(13,14,15,16)); mat4
mat5 <- matrix(c('a','b','c','d'), nrow=2, byrow=T)
mat5 <- matrix(c('a','b','c','d'), nrow=2, byrow=T); mat5
colnames(mat5) <- c('First', 'Second', 'Third')
mat5
mat5 <- cbind(mat5, c('e', 'f'))
mat5
colnames(mat5) <- c('First', 'Second', 'Third')
mat5
# Maxtrix형 연습문제
seasons <- mat(c('봄','여름','가을','겨울')); seasons
# Maxtrix형 연습문제
seasons <- matrix(c('봄','여름','가을','겨울')); seasons
# Maxtrix형 연습문제
seasons <- matrix(c('봄','여름','가을','겨울'), nrow=2); seasons
seasons <- matrix(c('봄','여름','가을','겨울'), nrow=2, byrow=T); seasons
seasons(2,)
seasons[2,]
seasons[,1]
seasons[2,]
seasons[,2]
seasons_2 <- rbind(seasons,c('초봄', '초가을')); seasons_2
seasons_3 <- cbind(seasons_2, c('초여름', '초겨울', '한겨울')); seasons_3
array1 <- array(c(1:12), dim(4,3)); array1
array1 <- array(c(1:12), dim=c(4,3)); array1
array1 <- array(c(1:12), dim=c(4,3), byrow=T); array1
array2 <- array(c(1:12), dim(2,2,3))
array2 <- array(c(1:12), dim(2,2,3)); array2
array2 <- array(c(1:12), dim=c(2,2,3)); array2
array2
array2[1,1,2]
list1 <- list(name='홍길동, address='천국', tel='010-8706-4712', age=300)
list1
list1 <- list(name='홍길동', address='천국', tel='010-8706-4712', age=300)
list1
list1$name
list1$age
list1$address
list[1:2]
list1[1:2]
list1$birthday ,- '1719-05-30'
list1$birthday <- '1719-05-30'
list
list1
list1$birthday <- NULL
list1
rm(list=ls())
no <- c(1,2,3,4)
name <- c('Apple', 'Peach', 'Banana', 'Grape')
price <- c('500', '200', '100', '50')
No <- c(1,2,3,4)
Name <- c('Apple', 'Peach', 'Banana', 'Grape')
Price <- c('500', '200', '100', '50')
Qty <- c(5,2,,4,7)
rm(name)
rm(no, price)
Qty <- c(5,2,,4,7)
Qty <- c(5,2,,4,7)
Qty <- c(5,2,4,7)
sales <- date.frame(NO=No, NAME=Name, PRICE=Price, QTY=Qty)
sales <- date.frame(NO=No, NAME=Name, PRICE=Price, QTY=Qty); sales
sales <- data.frame(NO=No, NAME=Name, PRICE=Price, QTY=Qty); sales
sales
4, 'Grape',  50, 7)
sales2 <- matrix(c(1, 'Apple',  500, 5,
2, 'Peach',  200, 2,
3, 'Banana', 100, 4,
4, 'Grape',  50, 7))
sales2
sales2 <- matrix(c(1, 'Apple',  500, 5,
2, 'Peach',  200, 2,
3, 'Banana', 100, 4,
4, 'Grape',  50, 7), nrow=4, byrow=T)
sales2
df1 <- data.frame(sales2)
df1
names(df1) <- c('NO', 'NAME', 'PRICE', 'QTY')
df1
sales
sales$NAME
sales[1,3]
sales[1,3]
sales[,3]
sales$PRICE
sales[c(1,2),]
sales[,c(1,2)]
sales[,c(1:3)]
subset(sales , QTY<5)
subset(sales , QTY<5)
subset(sales, PRICE==500)
subset(sales, PRICE!=500)
subset(sales, NAME=='Grape')
no <- c(1,2,3,)
name <- c('apple', 'banana', 'peach')
price <- c(100,200,300)
df1 <- data.frame(NO=no, NAME=name, PRICE=price)
df1
no <- c(1,2,3)
df1
no <- c(1,2,3)
name <- c('apple', 'banana', 'peach')
price <- c(100,200,300)
df1 <- data.frame(NO=no, NAME=name, PRICE=price)
df1
no <- c(10,20,30)
name <- c('train', 'car', 'airplane')
price <- c(1000,2000,3000)
df2 <- data.frame(NO=no, NAME=name, PRICE=price)
df2
df3 <- cbind(df1, df2)
df3
df3$NAME
df3[,5]
df5<- rbind(df1, df2)
df5
df1 <- data.frame(name=c('apple', 'banana', 'cherry'), price=c(300,200,100))
df1
df5 <- data.frame(name=c('apple', 'banana', 'cherry'), price=c(300,200,100))
df5
df6 <- data.frame(name=c('apple', 'cherry', 'berry'), qty=c(10,20,30))
df6
merge(df5,df6)
merge(df5,df6, all=T)
cbind(df5,df6)
rbind(df5,df6)
cbind(df6,df5)
df1
new <- data.frame(name= 'mango', price=400)
df1<- rbind(df1,new)
df1
df1 <- rbind(df1, data.frame(name= 'berry', price= 500))
df1
df1 <- cbind(df1, data.frame(qty=c(10,20,30,40,50)))
df1
no <- c(1,2,3,4,5)
no <- c(1,2,3,4,5)
name <- c('서진수', '주시현', '최경우', '이동근', '윤정웅')
address <- c('서울', '대전', '포항', '경주', '경기')
tel <- c(1111, 2222, 3333, 4444, 5555)
hoby <- c('독서', '미술', '놀고먹기', '먹고놀기', '노는애감시하기')
member <- data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBY= hoby)
member
member2 <- subset(member, select = c(NO, NAME, TEL))
member2
member3 <- subset(member, select = -TEL)
member3
colnames(member3) <- c('번호', '이름', '주소', '취미')
member3
sales
ncol(sales)
nrow(sales)
names(sales)
rownames(sales)
sales[c(2,3,1,),]
sales[c(2,3,1,), ]
sales[c(2,3,1,4), ]
list.files()
rm(list=ls())
seasons <- matrix(c('봄', '여름', '가을', '겨울'), nrow=2)
seasons <- matrix(c('봄', '여름', '가을', '겨울'), nrow=2); seasons
seasons <- matrix(c('봄', '여름', '가을', '겨울'), nrow=2, byrow=T)
seasons
seasons[,2]
seasons2 <- rbind(seasons, c('초봄', '초가을'))
seasons2
seasons3 <- cbind(seasons2, c('초여름', '초겨울', '한겨울'))
seasons3
no <- c(1,2,3,4)
name <- c('Apple', 'Peach', 'Banana', 'Grape')
Price <- c(500, 200, 100, 50)
rm(Price)
price <- c(500, 200, 100, 50)
qty <- c(5, 2, 4, 7)
sales <- data.frame(NO=no, NAME=name, PRICE=price, QTY=qty)
sales
sales1 <- data.frame(NO1=no1, NAME1=name1, PRICE1=price1, QTY1=qty1)
no1 <- c(1,2,3,4)
name1 <- c('Apple', 'Peach', 'Banana', 'Grape')
price1 <- c(200, 100, 50)
qty1 <- c(5, 2, 4, 7)
sales1 <- data.frame(NO1=no1, NAME1=name1, PRICE1=price1, QTY1=qty1)
price1 <- c(500, 200, 100, 50)
sales1 <- data.frame(NO1=no1, NAME1=name1, PRICE1=price1, QTY1=qty1)
sales1
price1 <- c(NULL, 200, 100, 50)
sales1 <- data.frame(NO1=no1, NAME1=name1, PRICE1=price1, QTY1=qty1); sales1
price1 <- c('NULL', 200, 100, 50)
sales1 <- data.frame(NO1=no1, NAME1=name1, PRICE1=price1, QTY1=qty1); sales1
sales
sales$NO
sales$NAME
sales[1,4]
sales[,4]
sales[0,4]
sales(c(1,2),)
sales[c(1,2),]
sales[c(1:3),]
subset(sales, PRICE>150)
subset(sales, price>150)
subset(sales, price>150)
rm(list(ls))
rm(list=ls())
rm(list=ls())
scan <- scan('scan_1.txt')
scan <- scan('scan_1.txt')
rm(list=ls())
setwd('D:/Heechul/R_Statistics/Lecture/chapter07')
