sales1 <- data.frame(NO1=no1, NAME1=name1, PRICE1=price1, QTY1=qty1)
sales1
price1 <- c(NULL, 200, 100, 50)
sales1 <- data.frame(NO1=no1, NAME1=name1, PRICE1=price1, QTY1=qty1); sales1
price1 <- c('NULL', 200, 100, 50)
sales1 <- data.frame(NO1=no1, NAME1=name1, PRICE1=price1, QTY1=qty1); sales1
sales
sales$NO
sales$NAME
sales[1,4]
sales[,4]
sales[0,4]
sales(c(1,2),)
sales[c(1,2),]
sales[c(1:3),]
subset(sales, PRICE>150)
subset(sales, price>150)
subset(sales, price>150)
rm(list(ls))
rm(list=ls())
rm(list=ls())
scan <- scan('scan_1.txt')
scan <- scan('scan_1.txt')
rm(list=ls())
setwd('D:/Heechul/R_Statistics/Lecture/chapter07')
setwd('D:/Heechul/R_Statistics/Lecture/chapter07')
## 문제 02. 학생들의 평균성적은 55점.
##          0교시 수업 후 성적 58, 49, 39, 99, 32, 88, 62, 30, 55, 65, 44, 55, 57, 53, 88, 42, 39
##          0교시 수업을 시행한 후, 학생들의 성적은 올랐다고 할 수 있는가?
# H0 : 학생들의 mu = 55 or mu <= 55
# H1 : 학생들의 mu > 55
score <- c(58, 49, 39, 99, 32, 88, 62, 30, 55, 65, 44, 55, 57, 53, 88, 42, 39)
mu <- 55
xbar <- mean(score)
xbar
sd <- sd(score)
sd
n <- length(score)
n
# 통계량
t <- (xbar-mu) / (sd/sqrt(n))
t
# 유의 수준(한쪽:오른쪽)
alpha <- 0.05
c.u <- 1 - qt(alpha, df=n-1)
c.u
# 유의 확률
p.value <- 1 - pt(t, df=n-1)
p.value
t.test(score, mu=mu, alternative = 'greater')
## 예제 7-1.
qf(0.05, df=25)
## 예제 7-1.
qf(0.05, df=17, df=25)
qf(0.05, df=17, df=25)
library(prob)
qf(0.05, df=17, df=25)
qf(0.05, df=16, df=24)
qf(0.05, df=17, df=25)
qf(0.05, 17, 25)
pf(0.05, 17, 25)
qf(0.975, df = 17, df = 25)
qf(0.975, df1 = 17, df2 = 25)
qf(0.025, df1 = 17, df2 = 25)
qf(0.975, df1 = 17, df2 = 25)
data <- read.table('http://www.amstat.org/publications/jse/datasets/babyboom.dat.txt', header = F)
data
nrow(data)
ncol(data)
str(data)
head(data)
names <- c('time', 'gender', 'weight', 'minutes')
source('D:/Heechul/R_Statistics/Lecture/chapter07(여러 모집단의 평균 비교 검정)/section01.R', encoding = 'UTF-8', echo=TRUE)
head(data)
names(data) <- c('time', 'gender', 'weight', 'minutes')
head(data)
names(data)[1] <- 'time.24Hrs'
head(data)
row.names(data)
data
str(data[data$gender==2,])
chapter7 <- data[,c(2,3)]
chapter
chapter7
write.table(chapter7, './data/chapter7.txt', row.names=F)
setwd('D:/Heechul/R_Statistics/Lecture/chapter07')
setwd('D:/Heechul/R_Statistics/Lecture/chapter07')
setwd('D:/Heechul/R_Statistics/Lecture/chapter07(여러 모집단의 평균 비교 검정)')
write.table(chapter7, 'chapter7.txt', row.names=F)
write.table(chapter7, './data/chapter7.txt', row.names=F)
write.table(chapter7, './data/chapter7.txt', row.names=F)
ad <- read.csv('data/age.data.csv', header = T)
ad
ad$score <- ifelse(ad$score == 99, NA, ad$score)
summary(ad)
ad2 <- read.csv('data/age.data.csv', header = T, na.strings = c('99'))
summary(ad2)
ad$score <- ifelse(ad$score == 99, NA, ad$score)
summary(ad)
ad <- read.csv('data/age.data.csv', header = T)
ad
summary(ad)
ad$score <- ifelse(ad$score == 99, NA, ad$score)
summary(ad)
ad2 <- read.csv('data/age.data.csv', header = T, na.strings = c('99'))
summary(ad2)
ad$scale <- factor(ad$scale)
ad$sex <- factor(ad$sex)
str(ad)
install.packages('doBy')
library(doBy)
data <- read.txt('data/chapter7.txt', header = T)
data <- read.table('data/chapter7.txt', header = T)
data
var.test(data$weight ~ data$gender)
# 모평균의 차이 검정
# 영가설 : 여 몸무게와 남 몸무게의 평균은 같다. 여평균 - 남평균 = 0
# 대안가설 : 여 몸무게는 남 몸무게 보다 작다. 여평균 - 남평균 < 0
t.test(data$weight ~ data$gender, mu=0, alternative='less', var.equal=T)
mtcar
mtcars
mpg
mtcars$mpg
mtcars
var.test(mtcars$mpg ~ mtcars$am)
# 분산의 동일성 검정
# 영가설 : 오토/수동 집단의 분산은 서로 동일하다.
# 대안가설 : 오토/수동 집단의 분산은 서로 다르다.
var.test(mtcars$mpg ~ mtcars$am)
# 2. 모평균의 차이 검정
# 영가설 : am:오토의 mpg의 평균과 am:수동의 mpg의 평균의 동일하다. (오토평균-수동평균=0)
# 대안가설 : am:오토의 mpg의 평균과 am:수동의 mpg의 평균의 동일하지 않다. (오토평균-수동평균<0)
t.test(mtcars$mpg ~ mtcars$am, mu=0, alternative='less', var.equal=T)
str(mtcars$am)
mtcars$am
mtcars
setwd('D:/Heechul/R_Statistics/Practice')
# 2. 모평균의 차이 검정
# 영가설 : am:오토의 mpg의 평균과 am:수동의 mpg의 평균의 동일하다. (오토평균-수동평균=0)
# 대안가설 : am:오토의 mpg의 평균과 am:수동의 mpg의 평균의 동일하지 않다. (오토평균-수동평균<0)
t.test(mtcars$mpg ~ mtcars$am, mu=0, alternative='less', var.equal=T)
head(mtcars)
library(dplyr)
ex01 <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mean_am = mean(am)) %>%
summarise(sd_am = sd(am))
ex01
ex01 <- mtcars %>%
group_by(am) %>%
summarise(mean_am = mean(am)) %>%
summarise(sd_am = sd(am))
ex01
head(mtcars)
ex01 <- mtcars %>%
group_by(am) %>%
summarise(mean_am = mean(mpg)) %>%
summarise(sd_am = sd(mpg))
ex01
ex01 <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mean_mpg = mean(mpg)) %>%
summarise(sd_mpg = sd(mpg))
ex01
head(mtcars)
ex01 <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mean_mpg = mean(mpg)) %>%
summarise(sd_mpg = sd(mpg))
ex01 <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mean_mpg = mean(mpg))
ex01
ex01 <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mean_mpg = mean(mpg)) %>%
summarise(sd_mpg = sd(mpg))
str(mtcars)
ex01 <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mean_mpg = mean(mpg))
mpg_mean <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_mean = mean(mpg))
ex01
mpg_mean
mpg_sd <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_sd = sd(mpg))
mpg_sd
# 2. 모평균의 차이 검정
# 영가설 : am:오토의 mpg의 평균과 am:수동의 mpg의 평균의 동일하다. (오토평균-수동평균=0)
# 대안가설 : am:오토의 mpg의 평균과 am:수동의 mpg의 평균의 동일하지 않다. (오토평균-수동평균<0)
t.test(mtcars$mpg ~ mtcars$am, mu=0, alternative='less', var.equal=T)
mpg_n <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_n = n(mpg))
mpg_n
mpg_n <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_n = n(mpg))
mpg_n <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_n = n())
mpg_n
# 2. 모평균의 차이 검정
# 영가설 : am:오토의 mpg의 평균과 am:수동의 mpg의 평균의 동일하다. (오토평균-수동평균=0)
# 대안가설 : am:오토의 mpg의 평균과 am:수동의 mpg의 평균의 동일하지 않다. (오토평균-수동평균<0)
t.test(mtcars$mpg ~ mtcars$am, mu=0, alternative='less', var.equal=T)
## 문제 02. MASS 패키지에 내장된 Cars93 데이터프레임에 대해서 생산국(Origin)이
#           USA vs. non-USA 2개의 group 에 대해서 차 가격(Price)의 평균이
#           차이가 있는지를검정해보시오.
Cars93
## 문제 02. MASS 패키지에 내장된 Cars93 데이터프레임에 대해서 생산국(Origin)이
#           USA vs. non-USA 2개의 group 에 대해서 차 가격(Price)의 평균이
#           차이가 있는지를검정해보시오.
install.packages('MASS')
library(MASS)
Cars93
head(Cars93)
str(Cars93)
price_n <- Cars93 %>%
select(Origin, Price) %>%
group_by(Origin) %>%
summarise(price_n = n())
price_n <- Cars93 %>%
select(Origin, Price) %>%
group_by(Origin) %>%
summarise(price_n = n())
price_n <- Cars93 %>%
select(Origin , Price) %>%
group_by(Origin) %>%
summarise(price_n = n())
price_n <- Cars93 %>%
select(Origin, Price) %>%
group_by(Origin) %>%
summarise(price_n = n())
head(Cars93)
price_n <- Cars93 %>%
select(Origin, Price) %>%
group_by(Origin)
price_n <- Cars93 %>%
select(Origin, Price)
price_n <- Cars93 %>%
select(Origin, Price)
library(dplyr)
price_n <- Cars93 %>%
select(Origin, Price)
## 문제 02. MASS 패키지에 내장된 Cars93 데이터프레임에 대해서 생산국(Origin)이
#           USA vs. non-USA 2개의 group 에 대해서 차 가격(Price)의 평균이
#           차이가 있는지를검정해보시오.
Cars93
str(Cars93)
price_n <- Cars93 %>%
select(Price, Origin)
price_n <- Cars93 %>%
select(price, origin)
mpg_n <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_n = n())
library(prob)
library(dplyr)
library(MASS)
head(mtcars)
str(mtcars)
mpg_mean <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_mean = mean(mpg))
price_n <- Cars93 %>%
select(Price, Origin) %>%
group_by(Origin) %>%
summarise(price_n = n())
library(prob)
library(dplyr)
library(MASS)
head(mtcars)
str(mtcars)
mpg_mean <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_mean = mean(mpg))
# 1. 분산의 동일성 검정
# 영가설 : 오토/수동 집단의 분산은 서로 동일하다.
# 대안가설 : 오토/수동 집단의 분산은 서로 다르다.
var.test(mtcars$mpg ~ mtcars$am)
mpg_mean <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_mean = mean(mpg))
mpg_mean
library(dplyr)
library(prob)
library(MASS)
mpg_mean <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_mean = mean(mpg))
head(mtcars)
str(mtcars)
# 1. 분산의 동일성 검정
# 영가설 : 오토/수동 집단의 분산은 서로 동일하다.
# 대안가설 : 오토/수동 집단의 분산은 서로 다르다.
var.test(mtcars$mpg ~ mtcars$am)
mpg_mean <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_mean = mean(mpg))
mpg_mean <- mtcars %>%
select(mpg, am) %>%
group_by(am) %>%
summarise(mpg_mean = mean(mpg))
mpg_mean
# 필요 패키지
library(prob)
library(dplyr)
library(ggplot2)
## 문제 03. mpg 데이터셋에서 다음을 검정해 보시오.
## 문제 03-1. subcompact 자동차와 midsize 자동차의 고속도로 연비
mpg
str(mpg)
mpg3 <- mpg %>%
filter(class %in% c('subcompact', 'midsize'))
mpg3_n <- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_n = n())
mpg3_n
mpg3_mean <- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_mean = mean(hwy))
mpg3_mean
mpg3_sd <- mpg3 %>%
select(class, hwy) %>%
group_by(class) %>%
summarise(mpg3_sd = sd(hwy))
mpg3_sd
## 1. 분산의 동일성 검정
# 영가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 동일하다. (V1 / V2 = 1)
# 대안가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 다르다. (V1 / V2 != 1)
var.test(mpg3$hwy ~ mpg3$class)
## 2. 평균의 동일성 검정
# 영가설 : subcompact 자동차의 hwy와  midsize 자동차의 hwy이 차이가 없다. (mu1 - mu2 = 0)
# 대안가설 : subcompact 자동차의 hwy와  midsize 자동차의 hwy이 차이가 있다.(mu1 - mu2 != 0)
t.test(mpg3$hwy ~ mpg3$class, mu=0, alternative='less', var.equal=T)
## 2. 평균의 동일성 검정
# 영가설 : subcompact 자동차의 hwy와  midsize 자동차의 hwy이 차이가 없다. (mu1 - mu2 = 0)
# 대안가설 : subcompact 자동차의 hwy와  midsize 자동차의 hwy이 차이가 있다.(mu1 - mu2 != 0)
t.test(mpg3$hwy ~ mpg3$class, mu=0, alternative='two.sided', var.equal=T)
## 2. 평균의 동일성 검정
# 영가설 : subcompact 자동차의 hwy와  midsize 자동차의 hwy이 차이가 없다. (mu1 - mu2 = 0)
# 대안가설 : subcompact 자동차의 hwy와  midsize 자동차의 hwy이 차이가 있다.(mu1 - mu2 != 0)
t.test(mpg3$hwy ~ mpg3$class, mu=0, alternative='two.sided', var.equal=T)
mpg3.2 <- mpg %>%
filter(fl %in% c('r', 'p'))
View(mpg3.2)
mpg3.2_n <- mpg3.2 %>%
select(fl, cty) %>%
group_by((fl)) %>%
summarise(mpg3.2_n = n())
mpg3.2_n
mpg3.2_mean <- mpg3.2 %>%
select(fl, cty) %>%
group_by((fl)) %>%
summarise(mpg3.2_mean = mean(cty))
mpg3.2_mean
mpg3.2_sd <- mpg3.2 %>%
select(fl, cty) %>%
group_by((fl)) %>%
summarise(mpg3.2_sd = sd(cty))
mpg3.2_sd
# 1. 분산의 동일성 검정
# 영가설 : 일반휘발유의 도시연비와 고급 휘발유의 도시연비 분산은 같다(v1 / v2 = 1)
# 대안가설 : 일반휘발유의 도시연비와 고급 휘발유의 도시연비 분산은 다르다(v1 / v2 != 1)
var.test(mpg3.2$cty ~ mpg3.2$fl)
# 2. 평균의 동일성 검정
# 영가설 : 일반 휘발유와 고급 휘발유의 cty는 차이가 없다 (mu1 - mu2 = 0)
# 대안가설 : 일반 휘발유와 고급 휘발유의 cty는 차이가 있다 (mu1 - mu2 != 0)
t.test(mpg3.2$cty ~ mpg3.2$fl, mu=0, alternative='two.sided', var.equal=F)
mpg3.2_n
mpg3.2_mean
mpg3.2_sd
mpg3.3 <- mpg %>%
filter(class == 'subcompact') %>%
filter(drv %in% c('f', 'r'))
mpg3.3
mpg3.3_n <- mpg3.3 %>%
select(drv, cty) %>%
group_by(drv) %>%
summarise(mpg3.3_n = n())
mpg3.3_n
mpg3.3_mean <- mpg3.3 %>%
select(drv, cty) %>%
group_by(drv) %>%
summarise(mpg3.3_mean = mean(cty))
mpg3.3_mean
mpg3.3_sd <- mpg3.3 %>%
select(drv, cty) %>%
group_by(drv) %>%
summarise(mpg3.3_sd = sd(cty))
mpg3.3_sd
# 1. 분산 동일성 검정
# 영가설 : 전륜구동의 도시연비 분산과 후륜구동의 도시연비 분산이 같다 (v1 / v2 = 1)
# 대안가설 : 전륜구동의 도시연비 분산과 후륜구동의  도시연비 분산이 다르다(v1 / v2 != 1)
var.test(mpg3.3$cty ~ mpg3.3$drv)
# 2. 평균 동일성 검정
t.test(mpg3.3$cty ~ mpg3.3$drv, mu=0, alternative='two.sided', var.equal=F)
# 2. 평균 동일성 검정
# 영가설 : 전륜구동과 후륜구동의 cty 차이가 없다 (mu1 - mu2 = 0)
# 대안가설 : 전륜구동과 후륜구동의 cty 차이가 있다 (mu1 - mu2 != 0)
t.test(mpg3.3$cty ~ mpg3.3$drv, mu=0, alternative='two.sided', var.equal=F)
mpg3.3_n
mpg3.3_sd
# 결론 : 전륜구동, 후륜구동 22, 9 표본 추출하여 측정한 결과
#        전륜구동의 평균과 표준편차 22.36364 +-4.52
#        후륜구동의 평균과 표준편차 15.88889+-1.45 로 측정
#        유의수준 0.05에서 가설검정하면
#        검정통계량 6.003(p-value = 1.759e-06)
1.759e-06
# 영가설 : 새로운 당뇨병 치료제는 효과가 없다. (mu1-mu2 < 0, mu1-mu2 = 0)
# 대안가설 : 새로운 당뇨병 치료제는 할당량을 줄여준다. (mu1 - mu2 > 0)
# 직접 구해보기
n <- length(ex7.1$placebo - ex7.1$newmedicine)
### 연습문제07. Paired sample T 테스트
## 문제 01
ex7.1 <- data.frame('placebo' =
c(51.4, 52.0, 45.5, 54.5, 52.3, 50.9, 52.7, 50.3, 53.8, 53.1),
'newmedicine' =
c(50.1, 51.5, 45.9, 53.1, 51.8, 50.3, 52.0, 49.9, 52.5, 53.0))
ex7.1
# 영가설 : 새로운 당뇨병 치료제는 효과가 없다. (mu1-mu2 < 0, mu1-mu2 = 0)
# 대안가설 : 새로운 당뇨병 치료제는 할당량을 줄여준다. (mu1 - mu2 > 0)
# 직접 구해보기
n <- length(ex7.1$placebo - ex7.1$newmedicine)
n
m <- mean(ex7.1$placebo - ex7.1$newmedicine)
m
s <- sd(ex7.1$placebo - ex7.1$newmedicine)
s
t <- m / (s/sqrt(n))
t
# R로 구해보기
t.test(ex7.1$placebo, ex7.1$newmedicine, paired = T, alternative = 'greater')
## 문제 2.
ex7.2 <- data.frame('A' =
c(13.2, 8.2, 10.9, 14.3, 10.7, 6.6, 9.5, 10.8, 8.8, 13.3),
'B' =
c(14.0, 8.8, 11.2, 14.2, 11.8, 6.4, 9.8, 11.3, 9.3, 13.6))
ex7.2
# 영가설 : A 밑창과 B 밑창의 원재료가 닳는 정도의 차이가 없다 (muA - muB = 0)
# 대안가설 : A 밑창과 B 밑창의 원재료가 닳는 정도의 차이가 있다 (muA - muB != 0)
# 직접 검정 통계량 구해보기
n <- length(ex7.2$A - ex7.2$B)
n
m <- mean(ex7.2$A - ex7.2$B)
m
s <- sd(ex7.2$A - ex7.2$B)
s
t <- m / (s/sqrt(n))
t
# R로 구하기
t.test(ex7.2$A, ex7.2$B, paired = T, alternative = 'two.sided')
### 연습문제10. 일원 분산분석(One way ANOVA)
## 문제 01.
ex10.1 <- data.frame('호수1' =
c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10),
'호수2' =
c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10),
'호수3' =
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30))
ex10.1
lake_mean <- ex10.1 %>%
summarise_each(funs(mean), 호수1, 호수2, 호수3)
lake_mean
lake_sd <- ex10.1 %>%
summarise_each(funs(sd), 호수1, 호수2, 호수3)
lake_sd
# 영가설 : 변화가 없다 (mu1 = mu2 =mu3)
# 대안가설 : 적어도 1개 호수의 산소량 차이는 있다.
ow <- lm(호수3~호수1, data = ex10.1)
anova(ow)
## 문제 02.
ex10.2 <- data.frame('A' =
c(15.5, 14.3, 16.3, 13.5, 15.7, 16.4, 14.7),
'B' =
c(14.7, 16.3, 15.5, 15.2, 16.3, 13.5, 15.4),
'C' =
c(15.5, 13.2, 16.5, 15.7, 15.3, 15.2, 14.8))
ex10.2
vege_mean <- ex10.2 %>%
summarise_each(funs(mean), A, B, C)
vege_mean
vege_sd <- ex10.2 %>%
summarise_each(funs(sd), A, B, C)
vege_sd
# 영가설 : 3개 채소에 대한 도매시장 7곳의 가격 차이는 없다 (mu1 = mu2 = mu3)
# 대안가설 : 3개 채소에 대한 도매시장 7곳의 가격 차이는 있다.
ow <- lm(A ~ C, data = ex10.2)
anova(ow)
