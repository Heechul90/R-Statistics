geom_hline(yintercept = seq(0, 0.3, 0.1), color='gray', linetype=2) +
geom_bar(stat = 'identity', aes(x=7, y=df01[7,2], fill='red'))
ggplot(df01, aes(x= x, y= px)) +
geom_step(color= 'black', size=1) +
theme_classic(base_family = 'bold', base_size = 10) +
geom_vline(xintercept = seq(0,10,1), color='grey', linetype=2) +
geom_hline(yintercept = seq(0, 0.3, 0.1), color='gray', linetype=2)
# 그래프에 영역 표시하기
px <- pbinom(x, size = n, prob = p)
px
plot(x, px, type='s')
px <- data.frame('x'=x, 'px'=px)
px
## 2. 패널티킥 성공확률 4/5, 10번 시도해서 7골 성공 확률?
# 성공확률 = 4/5, 실행 횟수 = 10
n <- 10
p <- 0.8
x <- 1:n
# 7번 성공할때 확률
dbinom(7, size = n, prob = p)
# 그래프에 영역 표시하기
px <- round(dbinom(x, size = n, prob = p),4)
px <- data.frame('x'=x, 'px'=px)
px
ggplot(px, aes(x= x, y= px)) +
geom_step(color= 'black', size=1) +
theme_classic(base_family = 'bold', base_size = 10) +
geom_vline(xintercept = seq(0,10,1), color='grey', linetype=2) +
geom_hline(yintercept = seq(0, 0.3, 0.1), color='gray', linetype=2)
ggplot(px, aes(x= x, y= px)) +
geom_step(color= 'black', size=1) +
theme_classic(base_family = 'bold', base_size = 10) +
geom_vline(xintercept = seq(0,10,1), color='grey', linetype=2) +
geom_hline(yintercept = seq(0, 0.3, 0.1), color='gray', linetype=2)
## 3. 불량률 5%, 20개 조사해서 불량이 2개 이하 나올 확률?
# 불량률 5%, 실행 횟수 = 20
n <- 20
p <- 0.05
x <- 1:n
# 불량이 0개, 1개, 2개가 나올 확률
dbinom(0, size = n, prob = p) + dbinom(1, size = n, prob = p) + dbinom(2, size = n, prob = p)
pbinom(2, size = n, prob = p)
# 그래프에 영역 표시하기
px <- pbinom(x, size = n, prob = p)
px <- data.frame('x'=x, 'px'=px)
px
ggplot(px, aes(x=x, y=px)) +
geom_step(color= 'black', size=1) +
theme_classic(base_family = 'bold', base_size = 10)
px
ggplot(px, aes(x=x, y=px)) +
geom_step(color= 'black', size=1)
ggplot(px, aes(x=x, y=px)) +
geom_step(color= 'black', size=1)
pbinom(2, size = n, prob = p)
## 4. 치료율 20%, 20명을 치료했을때 2명 이상이 회복할 확률?
n <- 20
p <- 0.2
x <- 1:n
# 2명~20명이 치료될 확률은 20명이 치료될 확률 1 - 0명,1명이 치료될 확률
1 - pbinom(1, size = n, prob = p)
# 그래프에 영역 표시하기
px <- pbinom(x, size = n, prob = p)
px
plot(x, px, type='s')
df_px <- data.frame('x'=x, 'px'=px)
## 2. 패널티킥 성공확률 4/5, 10번 시도해서 7골 성공 확률?
# 성공확률 = 4/5, 실행 횟수 = 10
n <- 10
p <- 0.8
x <- 1:n
# 7번 성공할때 확률
dbinom(7, size = n, prob = p)
# 그래프에 영역 표시하기
px <- round(dbinom(x, size = n, prob = p),4)
plot(x, px, type='s')
df_px <- data.frame('x'=x, 'px'=px)
df_px
ggplot(df_px, aes(x= x, y= px)) +
geom_step(color= 'black', size=1) +
theme_classic(base_family = 'bold', base_size = 10) +
geom_vline(xintercept = seq(0,10,1), color='grey', linetype=2) +
geom_hline(yintercept = seq(0, 0.3, 0.1), color='gray', linetype=2)
## 3. 불량률 5%, 20개 조사해서 불량이 2개 이하 나올 확률?
# 불량률 5%, 실행 횟수 = 20
n <- 20
p <- 0.05
x <- 1:n
# 불량이 0개, 1개, 2개가 나올 확률
dbinom(0, size = n, prob = p) + dbinom(1, size = n, prob = p) + dbinom(2, size = n, prob = p)
pbinom(2, size = n, prob = p)
# 그래프에 영역 표시하기
px <- pbinom(x, size = n, prob = p)
plot(x, px, type='s')
df_px <- data.frame('x'=x, 'px'=px)
df_px
ggplot(df_px, aes(x=x, y=px)) +
geom_step(color= 'black', size=1)
## 4. 치료율 20%, 20명을 치료했을때 2명 이상이 회복할 확률?
n <- 20
p <- 0.2
x <- 1:n
# 2명~20명이 치료될 확률은 20명이 치료될 확률 1 - 0명,1명이 치료될 확률
1 - pbinom(1, size = n, prob = p)
# 그래프에 영역 표시하기
px <- pbinom(x, size = n, prob = p)
plot(x, px, type='s')
df_px <- data.frame('x'=x, 'px'=px)
df_px
ggplot(df_px, aes(x=x, y=px)) +
geom_step(color= 'black', size=1)
## 예제 3-5. R을 이용한 정규분포 계산
options(digits = 3)
mu <- 170
sigma <- 6
ll <- mu - 3*sigma     # lower list
ul <- mu + 3*sigma     # upper list
x <- seq(ll, ul, by=0.01)
x
nd <- dnorm(x, mean = mu, sd= sigma)
nd
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red',
main= '평균 170, 표준편차 6인 정규분포곡선')
### 연습문제02. 정규 분포
## 1. 전구의 수명 800일, 표준편차 40일, 전구의 수명이 750일 이하일 확률?
# 전구의 평균 수명 800, 표준편차 40,
options(digits = 3)
mu <- 800
sigma <- 40
ll <- mu - 3*sigma     # lower list
ul <- mu + 3*sigma     # upper list
x <- seq(ll, ul, by=0.01)
nd <- dnorm(x, mean = mu, sd= sigma)
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red',
main= '평균 170, 표준편차 6인 정규분포곡선')
nd
df_nd <- data.frame('x'=x, 'nd'=nd)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line()
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red')
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line()
pnorm(750, mean = mu, sd = sigma)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 750, color='grey', linetype=2)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 750, color='red', linetype=2)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 750, color='red', linetype=1)
## 2. 근무기간 평균 11년, 분산이 16년이 정규분포
# 2-1. 20년 이상 근무한 종업원의 비율
mu <- 11
sigma <- 4
# 그래프에 영역표시하기
options(digits = 3)
ll <- mu - 3*sigma     # lower list
ul <- mu + 3*sigma     # upper list
x <- seq(ll, ul, by=0.01)
nd <- dnorm(x, mean = mu, sd= sigma)
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red')
df_nd <- data.frame('x'=x, 'nd'=nd)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 750, color='red', linetype=1)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 20, color='red', linetype=1)
## 2. 근무기간 평균 11년, 분산이 16년이 정규분포
# 2-1. 20년 이상 근무한 종업원의 비율
mu <- 11
sigma <- 4
# 그래프에 영역표시하기
options(digits = 3)
ll <- mu - 3*sigma     # lower list
ul <- mu + 3*sigma     # upper list
x <- seq(ll, ul, by=0.01)
nd <- qnorm(0.9, mean = mu, sd= sigma)
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red')
nd <- qnorm(x, mean = mu, sd= sigma)
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red')
# 그래프에 영역표시하기
options(digits = 3)
ll <- mu - 3*sigma     # lower list
ul <- mu + 3*sigma     # upper list
x <- seq(ll, ul, by=0.01)
nd <- qnorm(x, mean = mu, sd= sigma)
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red')
## 2. 근무기간 평균 11년, 분산이 16년이 정규분포
# 2-1. 20년 이상 근무한 종업원의 비율
mu <- 11
sigma <- 4
# 그래프에 영역표시하기
mu <- 11
sigma <- 4
options(digits = 3)
ll <- mu - 3*sigma     # lower list
ul <- mu + 3*sigma     # upper list
x <- seq(ll, ul, by=0.01)
nd <- dnorm(x, mean = mu, sd= sigma)
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red')
df_nd <- data.frame('x'=x, 'nd'=nd)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 20, color='red', linetype=1)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 11, color='red', linetype=1)
## 3. 수학성적 평균 70, 표준편차 8, 점수가 80점 이상이고 90점 이하인 학생 비율?
mu <- 70
sigma <- 8
# 성적이 90이하인 학생 비율에서 80이하인 학생 비율 빼주기
pnorm(90, mean = mu, sd = sigma) - pnorm(80, mean = mu, sd = sigma)
# 그래프에 영역표시하기
options(digits = 3)
ll <- mu - 3*sigma     # lower list
ul <- mu + 3*sigma     # upper list
x <- seq(ll, ul, by=0.01)
nd <- dnorm(x, mean = mu, sd= sigma)
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red')
df_nd <- data.frame('x'=x, 'nd'=nd)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 11, color='red', linetype=1)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 80, color='red', linetype=1)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 80, color='red', linetype=1) +
geom_vline(xintercept = 90, color='red', linetype=1)
## 4. 평균 1.5, 표준편차 2, H(t) = P(t <= X <= t+1)
# H(0) + H(2) ?
mu <- 1.5
sigma <- 2
# P(0 <= X <= 1) + P(2 <= X <= 3)
# P(0 <= X <= 1) 값은 1까지의 값을 구하고 0의 값을 빼준값
# 정규분포는 좌우 대칭이기 때문에 곱하기 2
(pnorm(1, mean = mu, sd = sigma) - pnorm(0, mean = mu, sd = sigma))*2
# 그래프에 영역표시하기
options(digits = 3)
ll <- mu - 3*sigma     # lower list
ul <- mu + 3*sigma     # upper list
x <- seq(ll, ul, by=0.01)
nd <- dnorm(x, mean = mu, sd= sigma)
plot(x, nd, type='l', xlab='x', ylab='P(X=x)', lwd=2, col='red')
df_nd <- data.frame('x'=x, 'nd'=nd)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 80, color='red', linetype=1) +
geom_vline(xintercept = 90, color='red', linetype=1)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 1, color='red', linetype=1) +
geom_vline(xintercept = 90, color='red', linetype=1)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 1, color='red', linetype=1) +
geom_vline(xintercept = 2, color='red', linetype=1)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 1, color='red', linetype=1) +
geom_vline(xintercept = 0, color='red', linetype=1)
ggplot(df_nd, aes(x=x, y=nd)) +
geom_line() +
geom_vline(xintercept = 0, color='red', linetype=1) +
geom_vline(xintercept = 1, color='red', linetype=1) +
geom_vline(xintercept = 2, color='red', linetype=1) +
geom_vline(xintercept = 3, color='red', linetype=1)
library(prob)
## χ2 분포 그래프 그리기
options(digits = 4)
n <- 1000
x <- seq(0, 30, length.out = n)
k <- 1
y <- dchisq(x,k)
y4 <- dchisq(x,4)
y8 <- dchisq(x,8)
y16 <- dchisq(x,16)
par(mfrow=c(2,2))
plot(x, y, type='l', col = 'red', lty=1, lwd=2, xlim=c(0,30), ylim=c(0,0.2),
main ='자유도 : 1', xlab= '', ylab ='χ2 분포')
plot(x, y4, type='l', col = 'black', lty=1, lwd=2, xlim=c(0,30), ylim=c(0,0.2),
main ='자유도 : 4', xlab= '', ylab ='χ2 분포')
plot(x, y8, type='l', col = 'green', lty=1, lwd=2, xlim=c(0,30), ylim=c(0,0.2),
main ='자유도 : 8', xlab= '', ylab ='χ2 분포')
plot(x, y16, type='l', col = 'blue', lty=1, lwd=2, xlim=c(0,30), ylim=c(0,0.2),
main ='자유도 : 16', xlab= '', ylab ='χ2 분포')
library(prob)
## χ2 분포 그래프 그리기
library(extrafont)
windowsFonts(dohyeon=windowsFont("BM DoHyeon"))
windowsFonts(jalnan=windowsFont("Jalnan"))
windowsFonts(binggrae=windowsFont("Binggrae Taom"))
windowsFonts(nbg=windowsFont("나눔바른고딕"))
## χ2 분포 그래프 그리기
# 1. 이항 분포 B(n, p) : 평균 np, 분산 npq ~ N(np, sqrt(npq/n))
# n = 10, p = 0.1, np = 1, npq = 0.9
n <- 1000
b.2.mean <- rep(NA, n)
b.4.mean <- rep(NA, n)
b.32.mean <- rep(NA, n)
b.64.mean <- rep(NA, n)
for (i in 1:n) {
b.2.mean[i] <- mean(rbinom(2, size=10, prob = 0.1))
b.4.mean[i] <- mean(rbinom(4, size=10, prob = 0.1))
b.32.mean[i] <- mean(rbinom(32, size=10, prob = 0.1))
b.64.mean[i] <- mean(rbinom(64, size=10, prob = 0.1))
}
par(mar = c(4,4,4,4), oma=c(0,0,4,0)) # 한번에 그리기 및 여백조정으로 toptitle 쓰기
hist(b.2.mean, probability = T, xlim = c(0, 4), col = "Coral1", xlab="", ylab="", family="binggrae",
main = "표본=2 ~ N(1, sqrt(0.9/2)")
b1 <- seq(min(b.2.mean), max(b.2.mean), length.out = 1000)
y_b1 <- dnorm(x=b1, mean = 1, sd=sqrt(0.9/2))
lines(b1, y_b1, lty=1, lwd=2, col = "black")
hist(b.4.mean, probability = T, xlim = c(0, 4), col = "Coral1", xlab="", ylab="", family="binggrae",
main = "표본=4")
b2 <- seq(min(b.4.mean), max(b.4.mean), length.out = 1000)
y_b2 <- dnorm(x=b2, mean = 1, sd=sqrt(0.9/4))
lines(b2, y_b2, lty=1, lwd=2, col = "black")
hist(b.32.mean, probability = T, xlim = c(0.3, 1.7), col = "Coral1", xlab="", ylab="", family="binggrae",
main = "표본=32")
b3 <- seq(min(b.32.mean), max(b.32.mean), length.out = 1000)
y_b3 <- dnorm(x=b3, mean = 1, sd=sqrt(0.9/32))
lines(b3, y_b3, lty=1, lwd=2, col = "black")
hist(b.64.mean, probability = T, xlim = c(0.3, 1.7), col = "Coral1", xlab="", ylab="", family="binggrae",
main = "표본=64 ~ N(1, sqrt(0.9/64)")
b4 <- seq(min(b.64.mean), max(b.64.mean), length.out = 1000)
y_b4 <- dnorm(x=b4, mean = 1, sd=sqrt(0.9/64))
lines(b4, y_b4, lty=1, lwd=2, col = "black")
mtext("표본갯수 변화에 따른 이항분포",
side = 3, # which margin to place text. 1=bottom, 2=left, 3=top, 4=right
line = 1, # to indicate the line in the margin starting with 0 and moving out
cex = 2, # font size
outer = T, # outer = TRUE : to place text at outer margin
family = "jalnan")
n <- 1000
chi.4.mean <- rep(NA, n)
chi.16.mean <- rep(NA, n)
chi.64.mean <- rep(NA, n)
chi.256.mean <- rep(NA, n)
rchisq(4,df=20)
for (i in 1:n) {
chi.4.mean[i]   <- mean(rchisq(4,  df=20))
chi.16.mean[i]  <- mean(rchisq(16, df=20))
chi.64.mean[i]  <- mean(rchisq(64, df=20))
chi.256.mean[i] <- mean(rchisq(256,df=20))
}
par(mar = c(4,4,4,4), oma=c(0,0,4,0)) # 한번에 그리기 및 여백조정으로 toptitle 쓰기
hist(chi.4.mean, probability = T, xlim=c(-3, 40), col = "cyan2", xlab="", ylab="", family="binggrae",
main = "표본=4")
chi1 <- seq(min(chi.4.mean), max(chi.4.mean), length.out = 1000)
y_chi1 <- dnorm(x=chi1,20, sqrt(40/4))
lines(chi1, y_chi1, lty=1, lwd=2, col = "black")
hist(chi.16.mean, probability = T, xlim=c(-3, 40), col = "cyan2", xlab="", ylab="", family="binggrae",
main = "표본=16")
chi2 <- seq(min(chi.16.mean), max(chi.16.mean), length.out = 1000)
y_chi2 <- dnorm(x=chi2,20, sqrt(40/16))
lines(chi2, y_chi2, lty=1, lwd=2, col = "black")
hist(chi.64.mean, probability = T, xlim=c(-3, 40), col = "cyan2", xlab="", ylab="", family="binggrae",
main = "표본=64")
chi3 <- seq(min(chi.64.mean), max(chi.64.mean), length.out = 1000)
y_chi3 <- dnorm(x=chi3,20, sqrt(40/64))
lines(chi3, y_chi3, lty=1, lwd=2, col = "black")
hist(chi.256.mean, probability = T, xlim=c(-3, 40), col = "cyan1", xlab="", ylab="", family="binggrae",
main = "표본=256")
chi4 <- seq(min(chi.256.mean), max(chi.256.mean), length.out = 1000)
y_chi4 <- dnorm(x=chi4,20, sqrt(40/256))
lines(chi4, y_chi4, lty=1, lwd=2, col = "black")
mtext("표본갯수 변화에 따른 χ2(20)분포", side = 3, line = 1, cex = 2, outer = T, family = "jalnan")
n <- 1000
t.2.mean <- rep(NA, n)
t.4.mean <- rep(NA, n)
t.8.mean <- rep(NA, n)
t.16.mean <- rep(NA, n)
rt(2,df=10000)
for (i in 1:n) {
t.2.mean[i]  <- mean(rt(2, df=10000))
t.4.mean[i]  <- mean(rt(4, df=10000))
t.8.mean[i]  <- mean(rt(8, df=10000))
t.16.mean[i] <- mean(rt(16,df=10000))
}
par(mar = c(4,4,4,4), oma=c(0,0,4,0)) # 한번에 그리기 및 여백조정으로 toptitle 쓰기
hist(t.2.mean, probability = T, xlim=c(-3, 3), col = "olivedrab1", xlab="", ylab="", family="binggrae",
main = "표본=2")
t1 <- seq(min(t.2.mean), max(t.2.mean), length.out = 1000)
y_t1 <- dnorm(x=t1, 0, sqrt(1/2))
lines(t1, y_t1, lty=1, lwd=2, col = "grey40")
hist(t.4.mean, probability = T, xlim=c(-3, 3), col = "olivedrab1", xlab="", ylab="", family="binggrae",
main = "표본=4")
t2 <- seq(min(t.4.mean), max(t.4.mean), length.out = 1000)
y_t2 <- dnorm(x=t2, 0, sqrt(1/4))
lines(t2, y_t2, lty=1, lwd=2, col = "grey40")
hist(t.8.mean, probability = T, xlim=c(-3, 3), col = "olivedrab1", xlab="", ylab="", family="binggrae",
main = "표본=8")
t3 <- seq(min(t.8.mean), max(t.8.mean), length.out = 1000)
y_t3 <- dnorm(x=t3, 0, sqrt(1/8))
lines(t3, y_t3, lty=1, lwd=2, col = "grey40")
hist(t.16.mean, probability = T, xlim=c(-3, 3), col = "olivedrab1", xlab="", ylab="", family="binggrae",
main = "표본=16")
t4 <- seq(min(t.8.mean), max(t.8.mean), length.out = 1000)
y_t4 <- dnorm(x=t4, 0, sqrt(1/16))
lines(t4, y_t4, lty=1, lwd=2, col = "grey40")
mtext("표본갯수 변화에 따른 t(InF)분포", side = 3, line = 1, cex = 2, outer = T, family = "jalnan")
df1 <- 100
df2 <- 100
f_ex <- df2 / (df2-2)
f_var <- (2*(df2^2)*(df1+df2-2)) / (df1*((df2-2)^2)*(df2-4))
n <- 1000
f.2.mean <- rep(NA, n)
f.4.mean <- rep(NA, n)
f.8.mean <- rep(NA, n)
f.16.mean <- rep(NA, n)
rt(2,df=10000)
for (i in 1:n) {
f.2.mean[i]  <- mean(rf(2, df1=df1, df2=df2))
f.4.mean[i]  <- mean(rf(4, df1=df1, df2=df2))
f.8.mean[i]  <- mean(rf(8, df1=df1, df2=df2))
f.16.mean[i] <- mean(rf(16,df1=df1, df2=df2))
}
par(mar = c(4,4,4,4), oma=c(0,0,4,0)) # 한번에 그리기 및 여백조정으로 toptitle 쓰기
hist(f.2.mean, probability = T, xlim=c(0, 2), col = "pink1", xlab="", ylab="", family="binggrae",
main = "표본=2")
f1 <- seq(min(f.2.mean), max(f.2.mean), length.out = 1000)
y_f1 <- dnorm(x=f1, 1, sqrt(f_var/2))
lines(f1, y_f1, lty=1, lwd=2, col = "black")
hist(f.4.mean, probability = T, xlim=c(0, 2), col = "pink1", xlab="", ylab="", family="binggrae",
main ="표본=4")
f2 <- seq(min(f.4.mean), max(f.4.mean), length.out = 1000)
y_f2 <- dnorm(x=f2, 1, sqrt(f_var/4))
lines(f2, y_f2, lty=1, lwd=2, col = "black")
hist(f.8.mean, probability = T, xlim=c(0, 2), col = "pink1", xlab="", ylab="", family="binggrae",
main = "표본=8")
f3 <- seq(min(f.8.mean), max(f.8.mean), length.out = 1000)
y_f3 <- dnorm(x=f3, 1, sqrt(f_var/8))
lines(f3, y_f3, lty=1, lwd=2, col = "black")
hist(f.16.mean, probability = T, xlim=c(0, 2), col = "pink1", xlab="", ylab="", family="binggrae",
main = "표본=16")
f4 <- seq(min(f.16.mean), max(f.16.mean), length.out = 1000)
y_f4 <- dnorm(x=f4, 1, sqrt(f_var/16))
lines(f4, y_f4, lty=1, lwd=2, col = "black")
mtext("표본갯수 변화에 따른 F(100,100)분포", side = 3, line = 1, cex = 2, outer = T, family = "jalnan")
## χ2 분포 그래프 그리기
set.seed(9)
n <- 1000
chisq.2.mean <- rep(NA, n)
chisq.4.mean <- rep(NA, n)
chisq.8.mean <- rep(NA, n)
chisq.16.mean <- rep(NA, n)
rchisq(2, df=20)
rchisq(2, df=1)
for(i in 1:n) {
chisq.2.mean[i] <- rchisq(2, df=1)
chisq.4.mean[i] <- rchisq(4, df=1)
chisq.8.mean[i] <- rchisq(8, df=1)
chisq.16.mean[i] <- rchisq(16, df=1)
}
hist(chisq.2.mean, probability = T, xlim = x(0,4),
main='Chisq',
col = 'red')
for(i in 1:n) {
chisq.2.mean[i] <- rchisq(2, df=1)
chisq.4.mean[i] <- rchisq(4, df=1)
chisq.8.mean[i] <- rchisq(8, df=1)
chisq.16.mean[i] <- rchisq(16, df=1)
}
hist(chisq.2.mean, probability = T,
main='Chisq',
col = 'red')
par(mfrow=c(1,1))
hist(chisq.2.mean, probability = T,
main='Chisq',
col = 'red')
chisq.2.mean
Chisq_x <- seq(min(chisq.2.mean), max(chisq.2.mean), length.out = 1000)
chisq_x <- seq(min(chisq.2.mean), max(chisq.2.mean), length.out = 1000)
chisq_y <- rchisq(2, df=1)
lines(chisq_x, chisq_y, lty=2, lwd=2, col='black')
chisq_y <- dnorm(x=chisq_x, mean = 1, sqrt(2/2))
lines(chisq_x, chisq_y, lty=2, lwd=2, col='black')
c(mean(chisq.2.mean), sd(chisq.2.mean))
c(mean(chisq.4.mean), sd(chisq.4.mean))
c(mean(chisq.8.mean), sd(chisq.8.mean))
c(mean(chisq.16.mean), sd(chisq.16.mean))
c(mean(chisq.2.mean), sd(chisq.2.mean))
c(mean(chisq.4.mean), sd(chisq.4.mean))
c(mean(chisq.8.mean), sd(chisq.8.mean))
c(mean(chisq.16.mean), sd(chisq.16.mean))
hist(chisq.4.mean, probability = T,
main='Chisq',
col = 'red')
hist(chisq.8.mean, probability = T,
main='Chisq',
col = 'red')
hist(chisq.16.mean, probability = T,
main='Chisq',
col = 'red')
par(mfrow=c(2,2))
hist(chisq.2.mean, probability = T,
main='Chisq',
col = 'red')
hist(chisq.4.mean, probability = T,
main='Chisq',
col = 'red')
hist(chisq.8.mean, probability = T,
main='Chisq',
col = 'red')
hist(chisq.16.mean, probability = T,
main='Chisq',
col = 'red')
