1-pbinorm(8, size=10, prob=0.7)
n <- 10
1-pbinorm(8, size=n, prob=0.7)
1-pbinom(8, size=n, prob=0.7)
## 04-2. 이 선수가 자유투를 10번 던질 때 5번 이상 8번 이하로 성공할 확률?
pbinom(8, size=n, prob=0.7) - pbinom(4, size=10, prob=0.7)
### 05. 2006년 한국인의 1인 1일 평균 알코올 섭취량은 8.1g
###     10명을 무작위 추출한 결과
###     (16.90, 13.21, 15.67, 9.87, 13.15, 9.98, 3.56, 14.50, 8.12, 6.97)
###     평균 알코올 섭취량이 달라졌다고 할 수 있는가?
mu <- 8.1
### 05. 2006년 한국인의 1인 1일 평균 알코올 섭취량은 8.1g
###     10명을 무작위 추출한 결과
###     (16.90, 13.21, 15.67, 9.87, 13.15, 9.98, 3.56, 14.50, 8.12, 6.97)
###     평균 알코올 섭취량이 달라졌다고 할 수 있는가?
al <- c(16.90, 13.21, 15.67, 9.87, 13.15, 9.98, 3.56, 14.50, 8.12, 6.97)
n <- length(al)
al
mu
n
n <- length(al)
n
xbar <- mean(al)
xbar
s <- sd(al)
s
## 정규성 검토
shapiro.test(al)
qqnorm(al); qqline
qqnorm(al); qqline(al)
## 검정
# 영가설 : 평균 알코올 섭취량은 변화가 없다.
# 대안가설 : 평균 알코올 섭취량은 변화가 있다.
t.test(al, mu=8.1, alternative = 'two.sided')
mu
xbar
s
### 07.
## 문제 07-1. subcompact 자동차와 midsize 자동차의 도시 연비를 검정하시오.
mpg
cty07 <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(class, cty) %>%
group_by(class)
cty07
cty07_mean <- mean(cty07$cty[class=='subcompact'])
cty_mean <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(class, cty) %>%
group_by(class) %>%
summarise(cty_mean = mean(cty))
cty_mean
cty_s <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(class, cty) %>%
group_by(class) %>%
summarise(cty_s = sd(cty))
cty_s
cty_sd <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(class, cty) %>%
group_by(class) %>%
summarise(cty_s = sd(cty))
cty_sd
cty_n <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(class, cty) %>%
group_by(class) %>%
summarise(cty_n = n(cty))
cty_n <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(class, cty) %>%
group_by(class) %>%
summarise(cty_n = n())
cty_n
cty_sd <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(class, cty) %>%
group_by(class) %>%
summarise(cty_sd = sd(cty))
cty_sd
cty07.1 <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(class, cty)
cty07.1
## 정규성 검토
shapiro.test(cty07.1[class == subcompact])
## 정규성 검토
shapiro.test(cty07.1[class == 'subcompact'])
cty07.1[class == 'subcompact']
cty07.1[class == 'subcompact']
cty07.1[class = 'subcompact']
sub_cty <- mpg %>%
filter(class == 'subcompact') %>%
select(class, cty)
sub_cty
## 정규성 검토
shapiro.test(sub_cty)
## 정규성 검토
shapiro.test(sub_cty[,2])
## 정규성 검토
shapiro.test(sub_cty[2,])
## 정규성 검토
shapiro.test(sub_cty[,2])
select(class, cty)
cty07.1
head(mtcars)
select(class, cty)
### 07.
## 문제 07-1. subcompact 자동차와 midsize 자동차의 도시 연비를 검정하시오.
mpg
cty07.1 <- mpg %>%
filter(class %in% c('subcompact', 'midsize'))
cty07.1
## 등분산성 검정
# 영가설 : 분산이 같다
# 대안가설 : 분산이 다른다
# 1. 분산의 동일성 검정
# 영가설 : 오토/수동 집단의 분산은 서로 동일하다.
# 대안가설 : 오토/수동 집단의 분산은 서로 다르다.
var.test(cty07.1$cty ~ cty07.1$class)
mpg3 <- mpg %>%
filter(class %in% c('subcompact', 'midsize'))
## 1. 분산의 동일성 검정
# 영가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 동일하다. (V1 / V2 = 1)
# 대안가설 : subcompact 자동차의 분산과 midsize 자도창의 분산은 서로 다르다. (V1 / V2 != 1)
var.test(mpg3$hwy ~ mpg3$class)
## 등분산성 검정
# 영가설 : 분산이 같다
# 대안가설 : 분산이 다른다
var.test(cty07.1$cty ~ cty07.1$class)
5.201e-07
print(5.201e-07)
## 평균 동일성 검정
t.test(cty07.1$cty ~ cty07.1$class, mu=0, alternative='two.sided', var.equal=f)
## 평균 동일성 검정
t.test(cty07.1$cty ~ cty07.1$class, mu=0, alternative='two.sided', var.equal=F)
## 07-2. 일반 위발류(r)와 고급 휘발유(p)의 고속도로 연비을 검정하시오.
mpg
hwy07.2 <- mpg %>%
filter(fl %in% c('r', 'p'))
hwy07.2
## 등분산성 검정
# 영가설 : 분산이 같다.
# 대안가설 : 분산이 다르다.
var.test(hwy07.2$hwy ~ hwy07.2$fl)
## 평균 동일성 검정
# 영가설 : hwy 차이가 없다
# 대안가설 : hwy 차이가 있다.
t.test(hwy07.2$hwy ~ hwy07.2$fl, mu=0, var.equal=F)
### 09. 키와 몸무게의 곡선회귀분석을 통한 2차 회귀식을 구하라
women
fit <- lm(weight ~ height, data =women)
summary(fit)
fit <- lm(weight ~ height + I(height^2), data =women)
summary(fit)
dbinom(3, size=n, prob=p)
## 문제 01-2. 평균이 170이고 표준편차가 6인 정규분포에서 상위 20%되는 사람들의 키 범위?
mu <- 170
s <- 6
1-qnorm(0.2, mean=mu, sd=s)
### 01.
## 문제 01-1. 시행횟수가 6이고 성공확률이 1/3인 이항분포에서 성공횟수가 3이 될 확률?
n <- 6
p <-1/3
dbinom(3, size=n, prob=p)
qnorm(0.2, mean=mu, sd=s)
qnorm(0.8, mean=mu, sd=s)
## 문제 01-3. 자유도가 3인 카이제곱분포에서 누적확률이 95%일 때의 값?
df <- 3
## 문제 01-5. 표준정규분포에서 확률번수의 값이 1일 때의 누적확률?
mu <- 0
s <- 1
pnorm(1, mean=mu, sd=s)
### 06. 정규분포에서 from <= x <= to 의 확률을 구하는 함수
###     rangenorm(from, to, mean, sd)을 작성하고
###     rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
rangenorm(-1.96, 1.96, 0, 1)
### 06. 정규분포에서 from <= x <= to 의 확률을 구하는 함수
###     rangenorm(from, to, mean, sd)을 작성하고
###     rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
pnorm(1.96, mu=0, sd=1) - pnorm(-1.96, mu=0, sd=1)
### 06. 정규분포에서 from <= x <= to 의 확률을 구하는 함수
###     rangenorm(from, to, mean, sd)을 작성하고
###     rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
pnorm(1.96, mean=0, sd=1) - pnorm(-1.96, mean=0, sd=1)
## 2차 회귀식
## weight.hat = 261.87818 - (7.34832*height1) + (0.08306*heigh1^2)
height1 <- 165
weight.hat = 261.87818 - (7.34832*height1) + (0.08306*heigh1^2)
## 2차 회귀식
## weight.hat = 261.87818 - (7.34832*height1) + (0.08306*heigh1^2)
height1 <- 165
weight.hat = 261.87818 - (7.34832*height1) + (0.08306*heigh1^2)
weight.hat = 261.87818 - (7.34832*height1) + (0.08306*height1^2)
weight.hat
weight.hat = 261.87818 + (0.08306*height1^2)
weight.hat
### 09. 키와 몸무게의 곡선회귀분석을 통한 2차 회귀식을 구하라
women
fit <- lm(weight ~ height + I(height^2), data =women)
summary(fit)
weight.hat = 261.87818 - (7.34832*height1)
weight.hat
weight.hat = 261.87818 - (7.34832*height1) + (0.08306*height1^2)
weight.hat
fit <- lm(weight ~ height, data =women)
summary(fit)
weight.hat = -87.51667 + (3.45000*height1)
weight.hat
fit <- lm(weight ~ height, data =women)
summary(fit)
## 2차 회귀식
## weight.hat = 261.87818 - (7.34832*height1) + (0.08306*heigh1^2)
height1 <- 180
weight.hat <- -87.51667 + (3.45000*height1)
weight.hat
fit <- lm(weight ~ height +I(height^2), data =women)
summary(fit)
### 07.
## 문제 07-1. subcompact 자동차와 midsize 자동차의 도시 연비를 검정하시오.
mpg
cty07.1 <- mpg %>%
filter(class %in% c('subcompact', 'midsize'))
cty07.1
cty07.1(mpg[cty])
cty07.1(mpg$cty)
cty07.1 <- mpg %>%
filter(class %in% c('subcompact', 'midsize'))
cty07.1(mpg$cty)
library(stringr)
cty07.1(mpg$cty)
cty07.1[mpg$cty]
### 05. 2006년 한국인의 1인 1일 평균 알코올 섭취량은 8.1g
###     10명을 무작위 추출한 결과
###     (16.90, 13.21, 15.67, 9.87, 13.15, 9.98, 3.56, 14.50, 8.12, 6.97)
###     평균 알코올 섭취량이 달라졌다고 할 수 있는가?
al <- c(16.90, 13.21, 15.67, 9.87, 13.15, 9.98, 3.56, 14.50, 8.12, 6.97)
al
str(al)
cty07.1 <- mpg %>%
filter(class %in% c('subcompact', 'midsize'))
cty07.1
sub.cty <- mpg %>%
filter(class == 'subcompact') %>%
select(cty)
sub.cty
shapiro.test(sub.cty)
str(sub.cty)
sub.cty <- as.numeric(sub.cty)
cty07.1
## 등분산성 검정
# 영가설 : 분산이 같다
# 대안가설 : 분산이 다른다
var.test(cty07.1$cty ~ cty07.1$class)
str(cty07.1)
cty07.1 <- mpg %>%
filter(class %in% c('subcompact', 'midsize')) %>%
select(cty, class)
str(cty07.1)
## 등분산성 검정
# 영가설 : 분산이 같다
# 대안가설 : 분산이 다른다
var.test(cty07.1$cty ~ cty07.1$class)
install.packages(c("dplyr", "prob"))
library(prob)
library(dplyr)
library(MASS)
data("Boston", package = "MASS")
str(Boston)
# 독립변수 선택
library(leaps)
library(mlbench)
all.model <- regsubsets(medv ~ ., data = Boston, nbest=4) # 전체모델
summary(all.model)
str(Boston)
all.model <- regsubsets(medv ~ ., data = Boston, nbest = 4)
str(Boston)
data("Boston", package = "MASS")
# 독립변수 선택
library(leaps)
# 독립변수 선택
install.packages('leaps')
library(leaps)
library(mlbench)
# 독립변수 선택
install.packages('mlbench')
library(leaps)
library(mlbench)
all.model <- regsubsets(medv ~ ., data = Boston, nbest = 4)
summary(all.model)
par(mfrow = c(1,2))
plot(all.model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
plot(all.model, scale="bic", main = " BIC 값을 기준으로 결정한 최적모델")   # BIC 값을 기준으로 결정한 최적모델  (작을수록 좋은 모델)
par(mfrow=c(1,1))
str(Boston)
# 최적모델을 결정한 결과 집값에 영향을 주는 독립변수로는 절편, zn, chas, nox, rm, dis, ptratio, black, lstat으로 결정되었다.
selected_boston <- dplyr %>%
select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat, medv)
library(dplyr)
# 최적모델을 결정한 결과 집값에 영향을 주는 독립변수로는 절편, zn, chas, nox, rm, dis, ptratio, black, lstat으로 결정되었다.
selected_boston <- dplyr %>%
select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat, medv)
# 최적모델을 결정한 결과 집값에 영향을 주는 독립변수로는 절편, zn, chas, nox, rm, dis, ptratio, black, lstat으로 결정되었다.
selected_boston <- dplyr::select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat, medv)
str(selected_boston)
selected_boston$chas <- factor(selected_boston$chas)
selected_model <- lm(medv ~ ., data=selected_boston)
# 그래프로 보기
par(mfrow=c(2,2))
plot(selected_model)
par(mfrow=c(1,1))
# 오차에 대한 기본 가정을 검토해주는 패키지 (gvlma)
library(car)
library(gvlma)
# 오차에 대한 기본 가정을 검토해주는 패키지 (gvlma)
install('car')
# 오차에 대한 기본 가정을 검토해주는 패키지 (gvlma)
install.packages('car')
# 오차에 대한 기본 가정을 검토해주는 패키지 (gvlma)
install.packages('gvlma')
# 오차에 대한 기본 가정을 검토해주는 패키지 (gvlma)
library(car)
library(gvlma)
summary(gvlma::gvlma(selected_model)) # 검정결과 오차항의 기본 가정을 만족하지 못함.
# 1. 결정된 모델에서 다중공선성 문제 검토
car::vif(selected_model) # 다중공선성의 문제는 없다.
# 위 모델에서 오차항의 기본가정이 위배되어 결정계수가 두 번째로 높은 모델을 선택
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, rad, ptratio, black, lstat,  medv)
str(selected_boston2)
selected_model2 <- lm(medv ~ ., data=selected_boston2)
summary(selected_model2)
summary(gvlma::gvlma(selected_model2))
car::vif(selected_model2) # 다중공선성의 문제는 없다.
# 결정계수가 3번째인 모델에서 영향력이 가장 낮은 black 변수를 제외한 모델 선택
selected_boston3 <- dplyr::select(Boston, crim, nox, rm, dis, rad, tax, ptratio, lstat, medv)
selected_model3 <- lm(medv ~ ., data=selected_boston3)
summary(selected_model3)
summary(gvlma::gvlma(selected_model3)) # 그래도 기본가정에는 위배..
car::vif(selected_model3) # 다중공선성의 문제는 없다.
# 3. (기본가정이 충족된다는 가정하에서... 첫번째 모델의) 회귀모델 검정 및 결론
summary(selected_model)
# 1. 결정된 모델에서 다중공선성 문제 검토
car::vif(selected_model)
# 위 모델에서 오차항의 기본가정이 위배되어 결정계수가 두 번째로 높은 모델을 선택
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, rad, ptratio, black, lstat,  medv)
str(selected_boston2)
selected_model2 <- lm(medv ~ ., data=selected_boston2)
summary(selected_model2)
summary(gvlma::gvlma(selected_model2))
car::vif(selected_model2) # 다중공선성의 문제는 없다.
# 결정계수가 3번째인 모델에서 영향력이 가장 낮은 black 변수를 제외한 모델 선택
selected_boston3 <- dplyr::select(Boston, crim, nox, rm, dis, rad, tax, ptratio, lstat, medv)
selected_model3 <- lm(medv ~ ., data=selected_boston3)
summary(selected_model3)
summary(gvlma::gvlma(selected_model3)) # 그래도 기본가정에는 위배..
car::vif(selected_model3)              # 다중공선성의 문제는 없다.
# 3. (기본가정이 충족된다는 가정하에서... 첫번째 모델의) 회귀모델 검정 및 결론
summary(selected_model)
knitr::opts_chunk$set(echo = TRUE)
x <- c(150, 160, 170, 180, 190)
### 연습문제12. 회귀분석
## 문제 01. 부모의 키가 클수록 자식의 키도 상대적으로 크다고 하는데,
##          회귀식을 구하고 아버지의 키가 165cm일 때
##          아들의 키는 얼마인지 예측하시오.
x <- c(150, 160, 170, 180, 190)
y <- c(176, 179, 182, 181, 185)
height <- data.frame('x'=x, 'y'=y)
height
fit <- lm(y ~ x, data = height)
summary(fit)
# 회귀식
yhat <- 146.60000 + 0.2*x1
# 아버지의 키가 165cm일 때 아들의 키
x1 <- 165
yhat <- 146.60000 + 0.2*x1
yhat
## 문제 02. 소득이 높을수록 신용카드 사용량이 많아진다고 하는데,
##          회귀식을 구하고
##          월 소득이 250만원일 때 신용카드 사용량을 예측하시오
x <- c(100, 200, 300, 400, 500)
y <- c(30, 70, 85, 140, 197)
credit <- data.frame('x' = x, 'y' = y)
credit
fit <- lm(y ~ x, data = credit)
summary(fit)
# 월 소득이 250만원일 때 신용카드 사용량
x1 <- 250
yhat <- -16.8 + 0.404*x1
yhat
## 문제 03. mtcars 데이터셋에서 배기량(disp)에 따른 마력(hp)의 회귀식을 구하시오.
mtcars
head(mtcars)
str(mtcars)
disp <- mtcars %>%
select(disp, hp)
disp
library(dplyr)
disp <- mtcars %>%
select(disp, hp)
install.packages('dplyr')
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
disp <- mtcars %>%
select(disp, hp)
disp
str(disp)
fit <- lm(hp ~ disp, data = mtcars)
summary(fit)
# 회귀식
yhat <- 45.7345 + 0.4375*x1
## 문제 03. mtcars 데이터셋에서 배기량(disp)에 따른 마력(hp)의 회귀식을 구하시오.
mtcars
knitr::opts_chunk$set(echo = TRUE)
disp <- mtcars %>%
select(disp, hp)
fit <- lm(hp ~ disp, data = mtcars)
summary(fit)
disp <- mtcars %>%
select(disp, hp)
disp
str(disp)
mtcars
mtcars
disp <- mtcars %>%
select(disp, hp)
disp
str(disp)
fit <- lm(hp ~ disp, data = mtcars)
summary(fit)
data("Boston", package = "MASS")
library(regsubsets)
install.packages('reqsubsets')
library(MASS)
Boston
# 1. Linear Regression Model
fit1 <- lm(medv~., data = Boston)
summary(fit1)
anova(fit1)
# 2. backward elimination
step(fit1, direction = "backward")
fit2 <- lm(medv ~ 1, data = Boston)
step(fit2,direction = "forward", scope = ~crim+zn+indus+chas+nox+rm+age+dis+rad+tax+ptratio+black+lstat)
step(fit1, direction = "forward")
# 2) forward selection (하나씩 추가하면서 판단)
fit2 <- lm(medv ~., data = Boston)
step(fit2, direction = "forward")
step(fit2,direction = "forward", scope = ~crim+zn+indus+chas+nox+rm+age+dis+rad+tax+ptratio+black+lstat)
# 2) forward selection (하나씩 추가하면서 판단)
fit2 <- lm(medv ~1, data = Boston)
step(fit2,direction = "forward", scope = ~crim+zn+indus+chas+nox+rm+age+dis+rad+tax+ptratio+black+lstat)
step(fit2,direction = "forward", scope = ~ crim + zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + black + lstat)
# 3) stepwise regression (모든경우를 해서 판단)
fit3 <- lm(medv~., data = Boston)
step(fit3 , direction = "both")
## age와 indus 를 제외하고 fit4 로 지정
fit2 <- lm(medv ~ crim + zn + chas + nox + rm + dis + rad + tax + ptratio + black + lstat , data = Boston)
summary(fit4)
## age와 indus 를 제외하고 fit4 로 지정
fit4 <- lm(medv ~ crim + zn + chas + nox + rm + dis + rad + tax + ptratio + black + lstat , data = Boston)
summary(fit4)
library(leaps)
subsets1 <- regsubsets(medv~., data = Boston , method = 'seqrep' , nbest = 13)
plot(subsets1)
subsets2 <- regsubsets(medv~., data = Boston , method = 'exhaustive' , nbest = 13)
plot(subsets2)
subsets1 <- regsubsets(medv~., data = Boston , method = 'seqrep' , nbest = 13)
plot(subsets1)
# 해석: crime, indus, age, rad, tax 가 제외됨
# crime, indus, age, rad, tax 제외하고 fit5로 지정
fit5 <- lm(medv ~ zn + chas + nox + rm + dis + ptratio + black + lstat, data = Boston))
# 해석: crime, indus, age, rad, tax 가 제외됨
# crime, indus, age, rad, tax 제외하고 fit5로 지정
fit5 <- lm(medv ~ zn + chas + nox + rm + dis + ptratio + black + lstat, data = Boston)
summary(fit5)
### fit4의 정규성, 등분산성, 선형성, 독립성 검토
par(mfrow=c(2,2))
plot(fit4)
### fit4의 정규성, 등분산성, 선형성, 독립성 검토
par(mfrow=c(2,2))
plot(fit4)
par(mfrow = c(1, 1))
qqnorm(fit2$residuals) ; qqline(fit2$residuals)
qqnorm(fit4$residuals) ; qqline(fit4$residuals)
qqnorm(fit4$residuals) ; qqline(fit4$residuals)
shapiro.test(fit4$residuals)
# 2) 선형성, 등분산성
library(gvlma)
# 2) 선형성, 등분산성
library(gvlma)
gvmodel2 <- gvlma(fit4)
summary(gvmodel2)
# 3) 독립성
library(car)
durbinWatsonTest(fit4)
### fit5의 정규성, 등분산성, 선형성, 독립성 검토
par(mfrow = c(2, 2))
plot(fit5)
par(mfrow = c(1, 1))
# 1) 정규성
qqnorm(fit4$residuals) ; qqline(fit4$residuals)
shapiro.test(fit4$residuals)
# 2) 선형성, 등분산성
library(gvlma)
gvmodel2 <- gvlma(fit4)
summary(gvmodel2)
# 3) 독립성
library(car)
durbinWatsonTest(fit4)
